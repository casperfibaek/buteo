window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "buteo", "modulename": "buteo", "kind": "module", "doc": "<h1 id=\"geospatial-analysis-meets-ai\">Geospatial Analysis Meets AI</h1>\n\n<p>Buteo is a toolbox designed to simplify the process of working with geospatial data in machine learning. It includes tools for reading, writing, and processing geospatial data, as well as tools for creating labels from vector data and generating patches from geospatial data. Buteo makes it easy to ingest data, create training data, and perform inference on geospatial data.</p>\n\n<p>Please note that Buteo is under active development, and its API may not be entirely stable.\nWhen using, please pin the version of Buteo you are using to avoid breaking changes.\nFeel free to report any bugs or suggest improvements.</p>\n\n<p>Author: <em>Casper Fibaek</em> (github.com/casperfibaek) </br></p>\n\n<p><strong>Dependencies</strong> </br>\n<code>numba</code> (<a href=\"https://numba.pydata.org/\">https://numba.pydata.org/</a>) </br>\n<code>gdal</code> (<a href=\"https://gdal.org/\">https://gdal.org/</a>) </br></p>\n\n<p><strong>Installation</strong> </br>\nUsing pip:</p>\n\n<pre><code>pip install gdal\npip install buteo\n</code></pre>\n\n<p>Using conda:</p>\n\n<pre><code>conda install gdal\npip install buteo\n</code></pre>\n\n<p><strong>Quickstart</strong></p>\n\n<h3 id=\"reproject-and-other-functions-to-references-vector-and-raster\">Reproject (and other functions) to references. (Vector and raster)</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">buteo</span> <span class=\"k\">as</span> <span class=\"nn\">beo</span>\n\n<span class=\"n\">OUTDIR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;path/to/output/dir&quot;</span>\n\n<span class=\"n\">vector_file_correct_projection</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;path/to/vector/file.gpkg&quot;</span>\n<span class=\"n\">raster_files_wrong_projection</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;path/to/raster/files/*.tif:glob&quot;</span>\n\n<span class=\"n\">paths_to_reprojected_rasters</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">reproject_raster</span><span class=\"p\">(</span>\n    <span class=\"n\">raster_files_with_wrong_projection</span><span class=\"p\">,</span>\n    <span class=\"n\">vector_file_with_correct_projection</span><span class=\"p\">,</span>\n    <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"n\">outdir</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">paths_to_reprojected_rasters</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"o\">/</span><span class=\"nb\">dir</span><span class=\"o\">/</span><span class=\"n\">file1</span><span class=\"o\">.</span><span class=\"n\">tif</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"o\">/</span><span class=\"nb\">dir</span><span class=\"o\">/</span><span class=\"n\">file2</span><span class=\"o\">.</span><span class=\"n\">tif</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<h3 id=\"align-stack-and-make-patches-from-rasters\">Align, stack, and make patches from rasters</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">buteo</span> <span class=\"k\">as</span> <span class=\"nn\">beo</span>\n\n<span class=\"n\">SRCDIR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;path/to/src/dir/&quot;</span>\n\n<span class=\"n\">paths_to_aligned_rasters_in_memory</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">align_rasters</span><span class=\"p\">(</span>\n    <span class=\"n\">SRCDIR</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*.tif:glob&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">stacked_numpy_arrays</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">raster_to_array</span><span class=\"p\">(</span>\n    <span class=\"n\">paths_to_aligned_rasters_in_memory</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">patches</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">array_to_patches</span><span class=\"p\">(</span>\n    <span class=\"n\">stacked_numpy_arrays</span><span class=\"p\">,</span>\n    <span class=\"mi\">256</span><span class=\"p\">,</span>\n    <span class=\"n\">n_offsets</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"c1\"># 1 overlap at 1/2 patch size (128)</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># patches_nr, height, width, channels</span>\n<span class=\"n\">patches</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">([</span><span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<h3 id=\"predict-a-raster-using-a-model\">Predict a raster using a model</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">buteo</span> <span class=\"k\">as</span> <span class=\"nn\">beo</span>\n\n<span class=\"n\">RASTER_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;path/to/raster/raster.tif&quot;</span>\n<span class=\"n\">RASTER_OUT_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;path/to/raster/raster_pred.tif&quot;</span>\n\n<span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">raster_to_array</span><span class=\"p\">(</span><span class=\"n\">RASTER_PATH</span><span class=\"p\">)</span>\n\n<span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span> <span class=\"c1\"># from pytorch, keras, etc..</span>\n\n<span class=\"c1\"># Predict the raster using overlaps, and borders.</span>\n<span class=\"c1\"># Merge using different methods. (median, mad, mean, mode, ...)</span>\n<span class=\"n\">predicted</span> <span class=\"o\">=</span> <span class=\"n\">predict_array</span><span class=\"p\">(</span>\n    <span class=\"n\">array</span><span class=\"p\">,</span>\n    <span class=\"n\">callback</span><span class=\"p\">,</span>\n    <span class=\"n\">tile_size</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Write the predicted raster to disk</span>\n<span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">array_to_raster</span><span class=\"p\">(</span>\n    <span class=\"n\">predicted</span><span class=\"p\">,</span>\n    <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"n\">RASTER_PATH</span><span class=\"p\">,</span>\n    <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"n\">RASTER_OUT_PATH</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Path to the predicted raster</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s2\">&quot;path/to/raster/raster_pred.tif&quot;</span>\n</code></pre>\n</div>\n\n<p></br></p>\n\n<table>\n<thead>\n<tr>\n  <th>Example Colabs</th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>Create labels from OpenStreetMap data</td>\n  <td><a href=\"https://colab.research.google.com/github/casperfibaek/buteo/blob/master/examples/create_labels_from_osm_data.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open All Collab\" /></a></td>\n</tr>\n<tr>\n  <td>Scheduled cleaning of geospatial data</td>\n  <td><a href=\"https://colab.research.google.com/github/casperfibaek/buteo/blob/master/examples/rocket_example.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open All Collab\" /></a></td>\n</tr>\n<tr>\n  <td>Clip and remove noise from rasters</td>\n  <td><a href=\"https://colab.research.google.com/github/casperfibaek/buteo/blob/master/examples/clip_and_remove_noise_raster.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open All Collab\" /></a></td>\n</tr>\n<tr>\n  <td>Sharpen nightlights data</td>\n  <td><a href=\"https://colab.research.google.com/github/casperfibaek/buteo/blob/master/examples/process_nightlights.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open All Collab\" /></a></td>\n</tr>\n<tr>\n  <td>Filters and morphological operations</td>\n  <td><a href=\"https://colab.research.google.com/github/casperfibaek/buteo/blob/master/examples/filters_and_morphology.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open All Collab\" /></a></td>\n</tr>\n</tbody>\n</table>\n\n<p></br></p>\n\n<p>The toolbox is being developed by ESA-Philab, NIRAS, and Aalborg University.</p>\n\n<h1 id=\"dependencies\">Dependencies</h1>\n\n<p>gdal\nnumba</p>\n\n<p>optional:\norfeo-toolbox\nesa-snap</p>\n"}, {"fullname": "buteo.ai", "modulename": "buteo.ai", "kind": "module", "doc": "<p>This module contains functions for augmenting images that are suited to remote sensing imagery.</p>\n"}, {"fullname": "buteo.ai.augmentation", "modulename": "buteo.ai.augmentation", "kind": "module", "doc": "<h3 id=\"dataset-augmentation-module\">Dataset Augmentation Module.</h3>\n"}, {"fullname": "buteo.ai.augmentation.Dataset", "modulename": "buteo.ai.augmentation", "qualname": "Dataset", "kind": "class", "doc": "<p>A dataset that does not apply any augmentations to the data.\nAllows a callback to be passed and can convert between\nchannel formats.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray or MultiArray\n    The data to read.</p>\n\n<p>y : np.ndarray or MultiArray\n    The labels for the data.</p>\n\n<p>callback : callable, optional\n    A callback to apply to the data before returning.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Dataset\n    A dataset to iterate over combining X and y.</p>\n"}, {"fullname": "buteo.ai.augmentation.Dataset.__init__", "modulename": "buteo.ai.augmentation", "qualname": "Dataset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">buteo</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">loaders</span><span class=\"o\">.</span><span class=\"n\">MultiArray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">buteo</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">loaders</span><span class=\"o\">.</span><span class=\"n\">MultiArray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation.DatasetAugmentation", "modulename": "buteo.ai.augmentation", "qualname": "DatasetAugmentation", "kind": "class", "doc": "<p>A dataset that does not apply any augmentations to the data.\nAllows a callback to be passed and can convert between\nchannel formats.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray or MultiArray\n    The data to read.</p>\n\n<p>y : np.ndarray or MultiArray\n    The labels for the data.</p>\n\n<p>callback_pre_augmentation : callable, optional\n    A callback to apply before augmentation.</p>\n\n<p>callback_post_augmentation : callable, optional\n    A callback to apply after augmentation.</p>\n\n<p>augmentations : list, optional\n    The augmentations to apply.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Dataset\n    A dataset to iterate over combining X and y.</p>\n"}, {"fullname": "buteo.ai.augmentation.DatasetAugmentation.__init__", "modulename": "buteo.ai.augmentation", "qualname": "DatasetAugmentation.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">buteo</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">loaders</span><span class=\"o\">.</span><span class=\"n\">MultiArray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">buteo</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">loaders</span><span class=\"o\">.</span><span class=\"n\">MultiArray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">callback_pre_augmentation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">callback_post_augmentation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">augmentations</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs", "modulename": "buteo.ai.augmentation_funcs", "kind": "module", "doc": "<h3 id=\"augmentation-functions\">Augmentation functions.</h3>\n"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_rotation", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_rotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationRotation", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationRotation", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationRotation.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationRotation.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_rotation_xy", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_rotation_xy", "kind": "function", "doc": "<p>Randomly rotate the image and label by 90 degrees intervals. Images\ncan be (channels, height, width) or (height, width, channels).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to rotate.</p>\n\n<p>y : np.ndarray\n    The label to rotate.</p>\n\n<p>k : int, optional\n    The number of 90 degree intervals to rotate by, default: -1 (random).</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    The rotated image and optionally the label.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationRotationXY", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationRotationXY", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationRotationXY.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationRotationXY.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_mirror", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_mirror", "kind": "function", "doc": "<p>Randomly mirrors the image.\nImages can be (channels, height, width) or (height, width, channels).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to mirror.</p>\n\n<p>k : int, optional\n    If -1, randomly mirrors the image along the horizontal or vertical axis.\n    1. mirrors the image along the horizontal axis.\n    2. mirrors the image along the vertical axis.\n    3. mirrors the image along both the horizontal and vertical axis, default: None.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The mirrored image.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMirror", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMirror", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMirror.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMirror.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_mirror_xy", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_mirror_xy", "kind": "function", "doc": "<p>Randomly mirrors the image. Images can be (channels, height, width) or (height, width, channels).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to mirror.</p>\n\n<p>y : np.ndarray\n    The label to mirror.</p>\n\n<p>k : int, optional\n    If -1, randomly mirrors the image along the horizontal or vertical axis.\n    1. mirrors the image along the horizontal axis.\n    2. mirrors the image along the vertical axis.\n    3. mirrors the image along both the horizontal and vertical axis, default: None.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    The mirrored image and optionally the label.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMirrorXY", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMirrorXY", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMirrorXY.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMirrorXY.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_noise_uniform", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_noise_uniform", "kind": "function", "doc": "<p>Adds random noise seperately to each pixel of the image. The noise works\nfor both channel first and last images. Follows a uniform distribution.\nInput should be (height, width, channels) or (channels, height, width).</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to add noise to.</p>\n\n<p>max_amount : float, optional\n    The maximum amount of noise to add, sampled uniformly, default: 0.1.</p>\n\n<p>additive : bool, optional\n    Whether to add or multiply the noise, default: False.</p>\n\n<p>per_channel : bool, optional\n    Whether to add the same noise to each channel or different noise to each channel (per_channel), default: True.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), ignored for this function.\n    Kept to keep the same function signature as other augmentations, default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with uniform noise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">additive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">per_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationNoiseUniform", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationNoiseUniform", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationNoiseUniform.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationNoiseUniform.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">additive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">per_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_noise_normal", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_noise_normal", "kind": "function", "doc": "<p>Adds random noise seperately to each pixel of the image. The noise works\nfor both channel first and last images. Follows a normal distribution.\nmax_amount is the standard deviation of the normal distribution.\nInput should be (height, width, channels) or (channels, height, width).</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to add noise to.</p>\n\n<p>max_amount : float, optional\n    The maximum amount of noise to add, sampled uniformly, default: 0.1.</p>\n\n<p>additive : bool, optional\n    Whether to add or multiply the noise, default: False.</p>\n\n<p>per_channel : bool, optional\n    Whether to add the same noise to each channel or different noise to each channel (per_channel), default: True.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), ignored for this function.\n    Kept to keep the same function signature as other augmentations, default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with normal noise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">additive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">per_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationNoiseNormal", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationNoiseNormal", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationNoiseNormal.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationNoiseNormal.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">additive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">per_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_channel_scale", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_channel_scale", "kind": "function", "doc": "<p>Scales the channels of the image seperately by a fixed amount.\nInput should be (height, width, channels) or (channels, height, width).</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to scale the channels of.</p>\n\n<p>max_amount : float, optional\n    The amount to possible scale the channels by. Sampled uniformly, default: 0.1.</p>\n\n<p>additive : bool, optional\n    Whether to add or multiply the scaling, default: False.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with scaled channels.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">additive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationChannelScale", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationChannelScale", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationChannelScale.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationChannelScale.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">additive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_contrast", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_contrast", "kind": "function", "doc": "<p>Changes the contrast of an image by a random amount, seperately for each channel.\nInput should be (height, width, channels) or (channels, height, width).</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to change the contrast of.</p>\n\n<p>max_amount : float, optional\n    The max amount to change the contrast by, default: 0.1.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with changed contrast.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationContrast", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationContrast", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationContrast.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationContrast.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_blur", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_blur", "kind": "function", "doc": "<p>Blurs an image at random. Input should be (height, width, channels) or (channels, height, width).</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to blur.</p>\n\n<p>channel_to_adjust : int, optional\n    Weather to only apply the blur to a specific channel.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The blurred image.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">channel_to_adjust</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationBlur", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationBlur", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationBlur.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationBlur.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_to_adjust</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_blur_xy", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_blur_xy", "kind": "function", "doc": "<p>Blurs an image at random. Input should be (height, width, channels) or (channels, height, width).\nThe label is blurred by the same amount.</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to blur.</p>\n\n<p>y : np.ndarray\n    The label to blur.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    The blurred image and optionally the unmodified label.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationBlurXY", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationBlurXY", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationBlurXY.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationBlurXY.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_label_smoothing", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_label_smoothing", "kind": "function", "doc": "<p>Smooths the labels of an image at random. Input should be (height, width, channels) or (channels, height, width).\nThe label is blurred by a random amount.</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>y : np.ndarray\n    The label to smooth.</p>\n\n<p>max_amount : float, optional\n    The maximum amount to smooth the label by, default: 0.1.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), ignored for this function.\n    Kept to keep the same function signature as other augmentations, default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The smoothed label.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">flat_array</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">fixed_amount</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationLabelSmoothing", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationLabelSmoothing", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationLabelSmoothing.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationLabelSmoothing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">flat_array</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">max_amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">fixed_amount</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_sharpen", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_sharpen", "kind": "function", "doc": "<p>Sharpens an image at random. Input should be (height, width, channels) or (channels, height, width).</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to sharpen.</p>\n\n<p>channel_to_adjust : int, default = -1\n    Weather to apply the sharpen to a specific channel or all (-1).</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The sharpened image.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">channel_to_adjust</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationSharpen", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationSharpen", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationSharpen.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationSharpen.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_to_adjust</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_sharpen_xy", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_sharpen_xy", "kind": "function", "doc": "<p>Sharpens an image at random. Input should be (height, width, channels) or (channels, height, width).\nThe label is sharpened by the same amount.</p>\n\n<p>NOTE: Beware of datatypes. Consider casting to float32 before adding noise.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to sharpen.</p>\n\n<p>y : np.ndarray\n    The label to sharpen. If None, no label is returned</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    The sharpened image and label.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationSharpenXY", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationSharpenXY", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationSharpenXY.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationSharpenXY.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_misalign", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_misalign", "kind": "function", "doc": "<p>Misaligns channels in the image at random.\ninput should be (height, width, channels) or (channels, height, width).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The image to misalign the channels of.</p>\n\n<p>max_offset : float, optional\n    The maximum offset to misalign the channels by. Default: 0.5.\n    Measured in percentage pixels.</p>\n\n<p>per_channel : bool, optional\n    Whether to misalign each channel by a different amount. Default: False.</p>\n\n<p>channel_to_adjust: int, optional\n    A specific channel to apply misalignment to. (-1 == all)</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels). Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The misaligned image.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">max_offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">per_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">channel_to_adjust</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMisalign", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMisalign", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMisalign.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMisalign.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">per_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">channel_to_adjust</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMisalignLabel", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMisalignLabel", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMisalignLabel.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMisalignLabel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">per_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_cutmix", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_cutmix", "kind": "function", "doc": "<p>Cutmixes two images.\nInput should be (height, width, channels) or (channels, height, width).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X_target : np.ndarray\n    The image to transfer the cutmix to.</p>\n\n<p>y_target : np.ndarray\n    The label to transfer the cutmix to.</p>\n\n<p>X_source : np.ndarray\n    The image to cutmix from.</p>\n\n<p>y_source : np.ndarray\n    The label to cutmix from.</p>\n\n<p>min_size : float, optional\n    The minimum size of the patch to cutmix. In percentage of the image width, default: 0.333.</p>\n\n<p>max_size : float, optional\n    The maximum size of the patch to cutmix. In percentage of the image width, default: 0.666.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    The cutmixed image and label.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X_target</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y_target</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">X_source</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y_source</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">min_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.333</span>,</span><span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.666</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationCutmix", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationCutmix", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationCutmix.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationCutmix.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">min_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.333</span>,</span><span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.666</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_funcs.augmentation_mixup", "modulename": "buteo.ai.augmentation_funcs", "qualname": "augmentation_mixup", "kind": "function", "doc": "<p>Mixups two images at random. This works by doing a linear intepolation between\ntwo images and then adding a random weight to each image.</p>\n\n<p>Mixup involves taking two images and blending them together by randomly interpolating\ntheir pixel values. More specifically, suppose we have two images x and x' with their\ncorresponding labels y and y'. To generate a new training example, mixup takes a\nweighted sum of x and x', such that the resulting image x^* = \u03bbx + (1-\u03bb)x',\nwhere \u03bb is a randomly chosen interpolation coefficient. The label for the new image\nis also a weighted sum of y and y' based on the same interpolation coefficient.</p>\n\n<p>input should be (height, width, channels) or (channels, height, width).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X_target : np.ndarray\n    The image to transfer to.</p>\n\n<p>y_target : np.ndarray\n    The label to transfer to.</p>\n\n<p>X_source : np.ndarray\n    The image to transfer from.</p>\n\n<p>y_source : np.ndarray\n    The label to transfer from.</p>\n\n<p>min_size : float, optional\n    The minimum mixup coefficient, default: 0.333.</p>\n\n<p>max_size : float, optional\n    The maximum mixup coefficient, default: 0.666.</p>\n\n<p>label_mix : int, optional\n    If 0, the labels will be mixed by the weights. If 1, the target label will be used. If 2,\n    the source label will be used. If 3, the max of the labels will be used. If 4, the min\n    of the labels will be used. If 5, the max of the image with the highest weight will be used.\n    If 6, the min of the image with the highest weight will be used. If 7, the sum of the labels\n    will be used, default: 0.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>inplace : bool, optional\n    Whether to perform the rotation in-place, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    The mixed up image and label.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X_target</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y_target</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">X_source</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y_source</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">min_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.333</span>,</span><span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.666</span>,</span><span class=\"param\">\t<span class=\"n\">label_mix</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMixup", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMixup", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.ai.augmentation_funcs.AugmentationMixup.__init__", "modulename": "buteo.ai.augmentation_funcs", "qualname": "AugmentationMixup.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">min_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.333</span>,</span><span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.666</span>,</span><span class=\"param\">\t<span class=\"n\">label_mix</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.augmentation_utils", "modulename": "buteo.ai.augmentation_utils", "kind": "module", "doc": "<h3 id=\"utility-functions-for-image-augmentation\">Utility functions for image augmentation.</h3>\n"}, {"fullname": "buteo.ai.encoding", "modulename": "buteo.ai.encoding", "kind": "module", "doc": "<h3 id=\"encoding-spatial-values\">Encoding spatial values.</h3>\n"}, {"fullname": "buteo.ai.encoding.encode_latitude", "modulename": "buteo.ai.encoding", "qualname": "encode_latitude", "kind": "function", "doc": "<p>Encode a latitude value into a two-element numpy array of sine and cosine components.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>lat : float\n    The latitude value to encode. Must be in the range [-90, 90].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A two-element numpy array containing the sine and cosine components of the encoded latitude.\n    The sine and cosine values are scaled to the range [0, 1].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lat</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.encode_longitude", "modulename": "buteo.ai.encoding", "qualname": "encode_longitude", "kind": "function", "doc": "<p>Encode a longitude value into a two-element numpy array of sine and cosine components.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>lng : float\n    The longitude value to encode. Must be in the range [-180, 180].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A two-element numpy array containing the sine and cosine components of the encoded longitude.\n    The sine and cosine values are scaled to the range [0, 1].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lng</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.encode_latlng", "modulename": "buteo.ai.encoding", "qualname": "encode_latlng", "kind": "function", "doc": "<p>Encode a latitude-longitude coordinate into a four-element numpy array of sine and cosine components.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>latlng : Union[np.ndarray, Tuple[float, float], List[float]]\n    A tuple, list, or numpy array containing the latitude and longitude values to encode.\n    The latitude value must be in the range [-90, 90] and the longitude value must be in the range [-180, 180].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A four-element numpy array containing the sine and cosine components of the encoded latitude and longitude.\n    The sine and cosine values are scaled to the range [0, 1].</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">latlng</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.encode_latlngs", "modulename": "buteo.ai.encoding", "qualname": "encode_latlngs", "kind": "function", "doc": "<p>Encode multiple latitude-longitude coordinates into a numpy array of sine and cosine components.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>latlngs : np.ndarray\n    A numpy array containing the latitude-longitude coordinates to encode.\n    The shape of the array should be (n, 2), (m, n, 2), or (p, q, n, 2), where n=2 represents the latitude\n    and longitude values. The latitude value must be in the range [-90, 90] and the longitude value must be\n    in the range [-180, 180].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A numpy array containing the sine and cosine components of the encoded latitude and longitude values.\n    The shape of the returned array will depend on the shape of the input array, with the last dimension\n    being 4 (two sine and two cosine values).</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>ValueError\n    If the input array has more than 3 dimensions or the shape of the array is not (n, 2), (m, n, 2),\n    or (p, q, n, 2).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">latlngs</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.decode_latitude", "modulename": "buteo.ai.encoding", "qualname": "decode_latitude", "kind": "function", "doc": "<p>Decode an encoded sine and cosine value to the original latitude value.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>encoded_sin : float\n    The sine component of the encoded latitude value.\n    Must be in the range [0, 1].</p>\n\n<p>encoded_cos : float\n    The cosine component of the encoded latitude value.\n    Must be in the range [0, 1].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>float\n    The original latitude value. The decoded latitude value is in the range [-90, 90].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">encoded_sin</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">encoded_cos</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.decode_longitude", "modulename": "buteo.ai.encoding", "qualname": "decode_longitude", "kind": "function", "doc": "<p>Decode an encoded sine and cosine value to the original longitude value.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>encoded_sin : float\n    The sine component of the encoded longitude value.\n    Must be in the range [0, 1].</p>\n\n<p>encoded_cos : float\n    The cosine component of the encoded longitude value.\n    Must be in the range [0, 1].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>float\n    The original longitude value. The decoded longitude value is in the range [-180, 180].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">encoded_sin</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">encoded_cos</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.decode_latlng", "modulename": "buteo.ai.encoding", "qualname": "decode_latlng", "kind": "function", "doc": "<p>Decode an encoded latitude-longitude coordinate to the original latitude-longitude values.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>encoded_latlng : Union[np.ndarray, List[Union[float, int]]]\n    A numpy array or list containing the encoded latitude-longitude coordinate to decode.\n    The shape of the array should be (4,), with the first two values representing the encoded latitude\n    and the last two values representing the encoded longitude. The encoded sine and cosine values\n    must be in the range [0, 1].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A numpy array containing the original latitude and longitude values. The shape of the returned\n    array will be (2,) with the latitude value at index 0 and the longitude value at index 1.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">encoded_latlng</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.decode_latlngs", "modulename": "buteo.ai.encoding", "qualname": "decode_latlngs", "kind": "function", "doc": "<p>Decode multiple encoded latitude-longitude coordinates to the original latitude-longitude values.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>encoded_latlngs : Union[np.ndarray, List[Union[float, int]]]\n    A numpy array or list containing the encoded latitude-longitude coordinates to decode.\n    The shape of the array should be (n, 4), where n represents the number of encoded coordinates.\n    The first two values of each encoded coordinate represent the encoded latitude and the last two\n    values represent the encoded longitude. The encoded sine and cosine values must be in the range [0, 1].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A numpy array containing the original latitude-longitude values. The shape of the returned\n    array will be (n, 2), where n represents the number of encoded coordinates. The latitude value\n    will be at index 0 and the longitude value will be at index 1.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">encoded_latlngs</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.encode_width", "modulename": "buteo.ai.encoding", "qualname": "encode_width", "kind": "function", "doc": "<p>Encode the width of a rectangle to be used as input to the model.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>lng : float\n    The longitude value representing the width of the rectangle.\n    Must be in the range [-180, 180].</p>\n\n<p>lng_max : float\n    The maximum longitude value. This is typically 360 for the full longitude range.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A numpy array containing the encoded width of the rectangle.\n    The encoded width consists of two values: the encoded sine and cosine values.\n    Both values will be in the range [0, 1].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lng</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">lng_max</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.encoding.encode_arr_position", "modulename": "buteo.ai.encoding", "qualname": "encode_arr_position", "kind": "function", "doc": "<p>Fast encoding of a 2D numpy array of coordinates where the width is cyclical.\nVery useful for global maps.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    A 2D numpy array of coordinates to be encoded. The first dimension represents the columns\n    and the second dimension represents the rows. The shape of the array should be (m, n), where\n    m represents the number of columns and n represents the number of rows.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A numpy array containing the encoded coordinates. The shape of the returned array will be (m, n, 3),\n    where m represents the number of columns, n represents the number of rows, and 3 represents the\n    number of encoded values for each coordinate. The first two values of each encoded coordinate\n    represent the encoded width, while the last value represents the encoded column.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking", "modulename": "buteo.ai.masking", "kind": "module", "doc": "<h3 id=\"masking-module-for-images\">Masking module for images</h3>\n"}, {"fullname": "buteo.ai.masking.MaskImages", "modulename": "buteo.ai.masking", "qualname": "MaskImages", "kind": "class", "doc": "<p>A class that masks images when called using a list of masking functions.\nParameters.\nNOTE: The images that are being masked should be floating point arrays.</p>\n\n<hr />\n\n<p>masking_functions : List, optional\n    A list of masking functions to apply to the image, default: None.</p>\n\n<p>method : int, optional\n    The method to use for replacing pixels.\n    0. replace with 0\n    1. replace with 1\n    2. replace with val\n    3. replace with random value between min_val and max_val\n    4. replace with random value binary value, either min_val or max_val\n    5. replace with a blurred version of the image</p>\n\n<p>per_channel : bool, optional\n    Whether to replace pixels per channel or for the same of each channel, default: True.</p>\n\n<p>val : float, optional\n    The value to replace pixels with if method is 2, default: 0.0.</p>\n\n<p>min_val : float, optional\n    The minimum value to replace pixels with if method is 3 or 4, default: 0.0.</p>\n\n<p>max_val : float, optional\n    The maximum value to replace pixels with if method is 3 or 4, default: 1.0.</p>\n\n<p>inplace : bool, optional\n    Whether to replace the pixels in the original array or return a copy, default: False.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The array with replaced pixels.</p>\n"}, {"fullname": "buteo.ai.masking.MaskImages.__init__", "modulename": "buteo.ai.masking", "qualname": "MaskImages.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">masking_functions</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">per_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">min_val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs", "modulename": "buteo.ai.masking_funcs", "kind": "module", "doc": "<h3 id=\"noise-and-masking-functions-for-images\">Noise and Masking functions for images.</h3>\n"}, {"fullname": "buteo.ai.masking_funcs.mask_pixels_2d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_pixels_2d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskPixels2D", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskPixels2D", "kind": "class", "doc": "<p>Masks random pixels from an image. The same pixels are masked on each channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskPixels2D.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskPixels2D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_pixels_3d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_pixels_3d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskPixels3D", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskPixels3D", "kind": "class", "doc": "<p>Masks random pixels from an image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskPixels3D.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskPixels3D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_lines_2d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_lines_2d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">max_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">min_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskLines2D", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskLines2D", "kind": "class", "doc": "<p>Masks random lines from an image. The same pixels are masked on each channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskLines2D.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskLines2D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_lines_3d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_lines_3d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskLines3D", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskLines3D", "kind": "class", "doc": "<p>Masks random lines from an image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskLines3D.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskLines3D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_lines_2d_bezier", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_lines_2d_bezier", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskLines2DBezier", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskLines2DBezier", "kind": "class", "doc": "<p>Masks random bezier lines from an image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskLines2DBezier.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskLines2DBezier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_lines_3d_bezier", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_lines_3d_bezier", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskLines3DBezier", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskLines3DBezier", "kind": "class", "doc": "<p>Masks random bezier lines from an image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskLines3DBezier.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskLines3DBezier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_elipse_2d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_elipse_2d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-07</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskElipse2D", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskElipse2D", "kind": "class", "doc": "<p>Masks a random elipse within the image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskElipse2D.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskElipse2D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_elipse_3d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_elipse_3d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-07</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskElipse3D", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskElipse3D", "kind": "class", "doc": "<p>Masks a random elipse within the image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskElipse3D.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskElipse3D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_rectangle_2d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_rectangle_2d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">epsilon</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-07</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskRectangle2D", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskRectangle2D", "kind": "class", "doc": "<p>Masks a random rectangle from an image. The same pixels are masked on each channel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of a rectangle being masked, default: 0.05.</p>\n\n<p>max_height : int, optional\n    The maximum height (proportion of total_height) of the rectangle, default: 0.5.</p>\n\n<p>max_width : int, optional\n    The maximum width (proportion of total_width) of the rectangle, default: 0.5.</p>\n\n<p>min_height : int, optional\n    The minimum height of the rectangle (proportion of total_height), default: 0.1</p>\n\n<p>min_width : int, optional\n    The minimum width of the rectangle (proportion of total_width), default: 0.1</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskRectangle2D.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskRectangle2D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_rectangle_3d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_rectangle_3d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskRectangle3D", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskRectangle3D", "kind": "class", "doc": "<p>Masks a random rectangle from an image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of a rectangle being masked, default: 0.05.</p>\n\n<p>max_height : int, optional\n    The maximum height (proportion of total_height) of the rectangle, default: 0.5.</p>\n\n<p>max_width : int, optional\n    The maximum width (proportion of total_width) of the rectangle, default: 0.5.</p>\n\n<p>min_height : int, optional\n    The minimum height of the rectangle (proportion of total_height), default: 0.1</p>\n\n<p>min_width : int, optional\n    The minimum width of the rectangle (proportion of total_width), default: 0.1</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskRectangle3D.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskRectangle3D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">max_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">max_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">min_height</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">min_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_channels", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_channels", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">max_channels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.MaskChannels", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskChannels", "kind": "class", "doc": "<p>Masks random channels from an image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The image to mask a pixel from.</p>\n\n<p>p : float, optional\n    The probability of masking a pixel, default: 0.05.</p>\n\n<p>max_channels : int, optional\n    The maximum number of channels to mask, default: 1.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The image with masked pixels.</p>\n"}, {"fullname": "buteo.ai.masking_funcs.MaskChannels.__init__", "modulename": "buteo.ai.masking_funcs", "qualname": "MaskChannels.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>, </span><span class=\"param\"><span class=\"n\">max_channels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.ai.masking_funcs.mask_replace_2d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_replace_2d", "kind": "function", "doc": "<p>Replaces pixels in an array with values using a mask and a method.\nNOTE: The mask should have the same shape as the array and\ncontain values either 0 for masked and 1 for valid.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The array to replace pixels in.</p>\n\n<p>mask : np.ndarray\n    The mask to use for replacing pixels.</p>\n\n<p>method : int, optional\n    The method to use for replacing pixels.\n    0. replace with 0\n    1. replace with 1\n    2. replace with val\n    3. replace with random value between min_val and max_val\n    4. replace with random value binary value, either min_val or max_val\n    5. replace with a blurred version of the image</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The array with replaced pixels.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">min_val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.masking_funcs.mask_replace_3d", "modulename": "buteo.ai.masking_funcs", "qualname": "mask_replace_3d", "kind": "function", "doc": "<p>Replaces pixels in an array with values using a mask and a method.\nNOTE: The mask should have the same shape as the array and\ncontain values either 0 for masked and 1 for valid.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The array to replace pixels in.</p>\n\n<p>mask : np.ndarray\n    The mask to use for replacing pixels.</p>\n\n<p>method : int, optional\n    The method to use for replacing pixels.\n    0. replace with 0\n    1. replace with 1\n    2. replace with val\n    3. replace with random value between min_val and max_val\n    4. replace with random value binary value, either min_val or max_val\n    5. replace with a blurred version of the image</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The array with replaced pixels.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">min_val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_val</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.scalers", "modulename": "buteo.ai.scalers", "kind": "module", "doc": "<h3 id=\"scalers-for-normalizing-input-data\">Scalers for normalizing input data.</h3>\n"}, {"fullname": "buteo.ai.scalers.scaler_minmax", "modulename": "buteo.ai.scalers", "qualname": "scaler_minmax", "kind": "function", "doc": "<p>Normalize an input numpy array using the min-max scaling method.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The input numpy array to be normalized.</p>\n\n<p>stat_dict : Optional[Dict[str, float]], default: None\n    A dictionary containing the minimum and maximum values of the input array.\n    If not provided, the function will compute the minimum and maximum values from the input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, Dict[str, float]]\n    A tuple containing the normalized numpy array (with dtype float32) and a dictionary containing the minimum\n    and maximum values used for scaling. The minimum and maximum values are stored in the dictionary using the\n    keys \"min\" and \"max\", respectively.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>AssertionError\n    If the input array is not a numpy array, or if the stat_dict is not a dictionary or None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">stat_dict</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.scalers.scaler_standardise", "modulename": "buteo.ai.scalers", "qualname": "scaler_standardise", "kind": "function", "doc": "<p>Standardize an an input numpy array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The input numpy array to be normalized.</p>\n\n<p>stat_dict : Optional[Dict[str, float]], default: None\n    A dictionary containing the mean and standard deviation values of the input array.\n    If not provided, the function will compute the mean and standard deviation from the input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, Dict[str, float]]\n    A tuple containing the normalized numpy array (with dtype float32) and a dictionary containing the mean\n    and standard deviation values used for scaling. The mean and standard deviation values are stored in the\n    dictionary using the keys \"mean\" and \"std\", respectively.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>AssertionError\n    If the input array is not a numpy array, or if the stat_dict is not a dictionary or None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">stat_dict</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.scalers.scaler_standardise_mad", "modulename": "buteo.ai.scalers", "qualname": "scaler_standardise_mad", "kind": "function", "doc": "<p>Normalize an input numpy array using the median absolute deviation (MAD) scaling method.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The input numpy array to be normalized.</p>\n\n<p>stat_dict : Optional[Dict[str, float]], default: None\n    A dictionary containing the median, absolute deviation and median absolute deviation of the input array.\n    If not provided, the function will compute these statistics from the input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, Dict[str, float]]\n    A tuple containing the normalized numpy array (with dtype float32) and a dictionary containing the median,\n    absolute deviation, and median absolute deviation used for scaling. These statistics are stored in the\n    dictionary using the keys \"median\", \"absdev\", and \"madstd\", respectively.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>AssertionError\n    If the input array is not a numpy array, or if the stat_dict is not a dictionary or None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">stat_dict</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.scalers.scaler_iqr", "modulename": "buteo.ai.scalers", "qualname": "scaler_iqr", "kind": "function", "doc": "<p>Normalize an input numpy array using the interquartile range (IQR) method.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The input numpy array to be normalized.</p>\n\n<p>q1 : float, default: 0.25\n    The lower quartile to use in the IQR calculation.</p>\n\n<p>q3 : float, default: 0.75\n    The upper quartile to use in the IQR calculation.</p>\n\n<p>stat_dict : Optional[Dict[str, float]], default: None\n    A dictionary containing the lower, median, and upper quartiles of the input array.\n    If not provided, the function will compute the quartiles from the input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, Dict[str, float]]\n    A tuple containing the normalized numpy array (with dtype float32) and a dictionary containing the lower,\n    median, and upper quartiles used for scaling. The quartile values are stored in the dictionary using the keys\n    \"q1\", \"median\", and \"q3\", respectively.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>AssertionError\n    If the input array is not a numpy array, q1 is not between 0.0 and 0.5, q3 is not between 0.5 and 1.0, or if\n    q1 is greater than or equal to q3, or if stat_dict is not a dictionary or None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">q1</span><span class=\"o\">=</span><span class=\"mf\">0.25</span>,</span><span class=\"param\">\t<span class=\"n\">q3</span><span class=\"o\">=</span><span class=\"mf\">0.75</span>,</span><span class=\"param\">\t<span class=\"n\">stat_dict</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.scalers.scaler_to_range", "modulename": "buteo.ai.scalers", "qualname": "scaler_to_range", "kind": "function", "doc": "<p>Normalizes an input numpy array to a given range.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The input numpy array to be normalized.</p>\n\n<p>min_val : Union[float, int], optional\n    The minimum value to scale the array to, default: 0.0.</p>\n\n<p>max_val : Union[float, int], optional\n    The maximum value to scale the array to, default: 1.0.</p>\n\n<p>stat_dict : Optional[Dict[str, float]], optional\n    A dictionary containing the minimum and maximum values of the input array.\n    If not provided, the function will compute the minimum and maximum values from the input array.\n    default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.array, Dict[str, float]]\n    A tuple containing the normalized numpy array (with dtype float32) and a dictionary containing the minimum\n    and maximum values used for scaling. The minimum and maximum values are stored in the dictionary using the\n    keys \"min\" and \"max\", respectively.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>AssertionError\n    If the input array is not a numpy array or if the stat_dict is not a dictionary or None.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This function uses the formula (arr - arr_min) / (arr_max - arr_min) to normalize the input array to a range\nof [min_val, max_val]. The minimum and maximum values of the input array can be passed through stat_dict,\notherwise, they will be computed from the array.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">scaler_to_range</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"mf\">6.</span><span class=\"p\">,</span> <span class=\"mf\">10.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">),</span> <span class=\"p\">{</span><span class=\"s1\">&#39;min&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;max&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">})</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">min_val</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">max_val</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">stat_dict</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.scalers.scaler_truncate", "modulename": "buteo.ai.scalers", "qualname": "scaler_truncate", "kind": "function", "doc": "<p>Truncate an input numpy array within the given range, and then normalise it to the target range.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The input numpy array to be truncated and normalized.</p>\n\n<p>trunc_min : float/int, optional\n    The minimum value to truncate to. If not provided, truncation will not be applied to the lower end.</p>\n\n<p>trunc_max : float/int, optional\n    The maximum value to truncate to. If not provided, truncation will not be applied to the upper end.</p>\n\n<p>target_min : float/int, optional\n    The minimum value of the target range to normalize to. Default: 0.0.</p>\n\n<p>target_max : float/int, optional\n    The maximum value of the target range to normalize to. Default: 1.0.</p>\n\n<p>stat_dict : Dict[str, float], optional\n    A dictionary containing the minimum and maximum values of the input array. If not provided, the function\n    will compute the minimum and maximum values from the truncated array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.array, Dict[str, float]]\n    A tuple containing the normalized numpy array (with dtype float32) and a dictionary containing the minimum\n    and maximum values used for scaling. The minimum and maximum values are stored in the dictionary using the\n    keys \"arr_min\" and \"arr_max\", respectively.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>AssertionError\n    If the input array is not a numpy array, or if the trunc_min is not less than trunc_max, or if the\n    target_min is not less than target_max, or if the stat_dict is not a dictionary or None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">trunc_min</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trunc_max</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">target_min</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">target_max</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">stat_dict</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.selection", "modulename": "buteo.ai.selection", "kind": "module", "doc": "<h3 id=\"data-selection\">Data Selection.</h3>\n"}, {"fullname": "buteo.ai.selection.split_train_val", "modulename": "buteo.ai.selection", "qualname": "split_train_val", "kind": "function", "doc": "<p>Split a dataset into training and validation sets using random shuffling.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The input data.</p>\n\n<p>y : np.ndarray\n    The target data.</p>\n\n<p>val_size : float, optional\n    The size of the validation set as a fraction of the total dataset. Default: 0.2.</p>\n\n<p>random_state : Union[float, int], optional\n    The random seed to use for the split. Default is None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]\n    A tuple containing the training and validation sets for input data and target data,\n    respectively, in the following order: x_train, x_val, y_train, y_val.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>AssertionError\n    If X and y are not numpy arrays, X and y do not have the same number of rows, or\n    val_size is not between 0 and 1.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>The function always shuffles the data before splitting.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">val_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.selection.split_train_val_test", "modulename": "buteo.ai.selection", "qualname": "split_train_val_test", "kind": "function", "doc": "<p>Split a dataset into training, validation, and test sets using a specified random seed.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The input data to be split.</p>\n\n<p>y : np.ndarray\n    The target data to be split.</p>\n\n<p>val_size : float, optional\n    The proportion of the data to use for validation, default: 0.1.</p>\n\n<p>test_size : float, optional\n    The proportion of the data to use for testing, default: 0.2.</p>\n\n<p>random_state : float or int, optional\n    Seed for the random number generator used for shuffling, default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray, np.ndarray, np.ndarray]\n    A tuple containing the following arrays:\n    - x_train: training input data\n    - x_val: validation input data\n    - x_test: testing input data\n    - y_train: training target data\n    - y_val: validation target data\n    - y_test: testing target data</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>AssertionError\n    If X and y are not numpy arrays with the same shape[0], or if val_size or test_size are not between 0 and 1.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>The function always shuffles the data before splitting.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">val_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">test_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.selection.sampling_stratified", "modulename": "buteo.ai.selection", "qualname": "sampling_stratified", "kind": "function", "doc": "<p>Stratified sampling of a dataset.</p>\n\n<p>This function can be used for both regression and classification problems.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The input data.</p>\n\n<p>y : np.ndarray\n    The target data.</p>\n\n<p>regression : bool, optional\n    Whether the dataset is for regression or classification.\n    Default: False.</p>\n\n<p>samples_per_class : int, optional\n    The number of samples to take per class.\n    If None, takes the same number of samples per class as the smallest class.\n    Default: None.</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    (X_stratified, y_stratified) : The stratified input and target data.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">regression</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">samples_per_class</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.selection.sampling_random", "modulename": "buteo.ai.selection", "qualname": "sampling_random", "kind": "function", "doc": "<p>Random sampling of a dataset.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>X : np.ndarray\n    The input data.</p>\n\n<p>y : np.ndarray\n    The target data.</p>\n\n<p>samples : int or float\n    The number of samples to take.\n    If int, the number of samples to take.\n    If float, the proportion of samples to take.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    (X_random, y_random) : The random input and target data.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">samples</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.ai.spatial_label_smoothing", "modulename": "buteo.ai.spatial_label_smoothing", "kind": "module", "doc": "<h3 id=\"module-for-spatial-label-smoothing\">Module for spatial label smoothing.</h3>\n"}, {"fullname": "buteo.ai.spatial_label_smoothing.spatial_label_smoothing", "modulename": "buteo.ai.spatial_label_smoothing", "qualname": "spatial_label_smoothing", "kind": "function", "doc": "<p>Smoothes the labels in a landcover classification by counting the weighted\noccurances of classes in a given radius.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The array to smooth. Should only contain integer values and 1 channel.</p>\n\n<p>radius : int, optional\n    The radius of the smoothing kernel, default: 2.</p>\n\n<p>classes : np.array, optional\n    The classes in the classification. Numpy integer list of unique values in the array if None, default: None.</p>\n\n<p>method : str, optional\n    Determines the flip protection method, default: 'half'.\n    kernel: The class is protected by ensuring that the weight of the center class is always at least the sum of the surrounding weights.\n    half: The class is protected by ensuring that it is always at least 50% + strength of the weight of the classes in the neighbourhood.\n    max: The class is protected by ensuring that it is always at at least the max + strength of the strongest class in the neighbourhood.\n    None: No flip protection.</p>\n\n<p>channel_last : bool, optional\n    Whether the image is (channels, height, width) or (height, width, channels), default: True.</p>\n\n<p>Returns\nnp.ndarray\n    The smoothed array. One channel for each class in ascending order. Float32.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">classes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;half&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">variance</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array", "modulename": "buteo.array", "kind": "module", "doc": "<h3 id=\"functions-for-transforming-rasters-represented-as-arrays\">Functions for transforming rasters represented as arrays.</h3>\n"}, {"fullname": "buteo.array.color", "modulename": "buteo.array.color", "kind": "module", "doc": "<h3 id=\"functions-for-interacting-with-colour\">Functions for interacting with colour.</h3>\n"}, {"fullname": "buteo.array.color.color_hsl_to_rgb", "modulename": "buteo.array.color", "qualname": "color_hsl_to_rgb", "kind": "function", "doc": "<p>Convert an HSL array to an RGB array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hsl_array : np.ndarray\n    Input HSL array with shape (height, width, 3).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    Output RGB array with shape (height, width, 3).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hsl_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.color.color_rgb_to_hsl", "modulename": "buteo.array.color", "qualname": "color_rgb_to_hsl", "kind": "function", "doc": "<p>Convert an RGB array to an HSL array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>rgb_array : np.ndarray\n    Input RGB array with shape (height, width, 3).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    Output HSL array with shape (height, width, 3).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgb_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution", "modulename": "buteo.array.convolution", "kind": "module", "doc": "<h3 id=\"convolution-module\">Convolution module.</h3>\n"}, {"fullname": "buteo.array.convolution.pad_array", "modulename": "buteo.array.convolution", "qualname": "pad_array", "kind": "function", "doc": "<p>Create a padded view of an array using SAME padding.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : numpy.ndarray\n    The input array to be padded.</p>\n\n<p>pad_size : int, optional\n    The number of padding elements to add to each side of the array.\n    Default: 1.</p>\n\n<p>method : str, optional\n    The padding method to use. Default: \"same\". Other options are\n    \"edge\" and \"constant\".</p>\n\n<p>constant_value : int, optional\n    The constant value to use when padding with \"constant\". Default: 0.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>numpy.ndarray\n    A padded view of the input array.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This function creates a padded view of an array using SAME padding, which\nadds padding elements to each side of the array so that the output shape\nis the same as the input shape. The amount of padding is determined by the\n<code>pad_size</code> parameter. The padding method can be one of three options: \"same\"\n(the default), \"edge\", or \"constant\". If \"constant\" padding is used, the\n<code>constant_value</code> parameter specifies the value to use.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">pad_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;same&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">constant_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution.convolve_array_simple", "modulename": "buteo.array.convolution", "qualname": "convolve_array_simple", "kind": "function", "doc": "<p>Convolve a kernel with an array using a simple method.\nArray must be 2D (height, width).\nThe function ignores nodata values and pads the array with 'same'.\nIt only supports 'summation' method.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : numpy.ndarray\n    The array to convolve.</p>\n\n<p>offsets : numpy.ndarray\n    The offsets of the kernel.</p>\n\n<p>weights : numpy.ndarray\n    The weights of the kernel.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>numpy.ndarray\n    The convolved array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">offsets</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">weights</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution.convolve_array_channels", "modulename": "buteo.array.convolution", "qualname": "convolve_array_channels", "kind": "function", "doc": "<p>Convolves a 3D array along its channels.\nUseful for 'collapsing' a 3D array into a 2D array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    A 3D array.</p>\n\n<p>method : int, optional\n    The method to use for convolving the array.</p>\n\n<pre><code>The following methods are valid:\n1. sum\n2. max\n3. min\n4. mean\n5. median\n6. variance\n7. standard deviation\n8. contrast\n9. mode\n10. median absolute deviation (mad)\n11. z-score\n12. z-score (mad)\n13. sigma lee\n14. quantile\n15. occurances\n16. feather\n17. roughness\n18. roughness tri\n19. roughness tpi\n\nDefault: 1.\n</code></pre>\n\n<p>nodata : bool, optional\n    Whether to use nodata values in the convolution. Default: False.</p>\n\n<p>nodata_value : float, optional\n    The nodata value to use in the convolution. Default: -9999.9.</p>\n\n<p>func_value : int or float, optional\n    The value to use in the convolution. Default: 0.5.</p>\n\n<p>channel_last : bool, optional\n    Whether the channels are the last axis in the array. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The convolved array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">nodata</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">9999.9</span>,</span><span class=\"param\">\t<span class=\"n\">func_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution.convolve_array", "modulename": "buteo.array.convolution", "qualname": "convolve_array", "kind": "function", "doc": "<p>Convolve an array using a set of offsets and weights.\nArray can be 2D or 3D.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : numpy.ndarray\n    The input array to be convolved.</p>\n\n<p>offsets : list of tuples\n    The list of pixel offsets to use in the convolution. Each tuple should be in the\n    format (row_offset, col_offset, depth_offset), where row_offset and col_offset\n    are the row and column offsets from the center pixel, and depth_offset is the\n    depth offset if the input array has more than two dimensions.</p>\n\n<p>weights : list of floats\n    The list of weights to use in the convolution. The length of the weights list should\n    be the same as the length of the offsets list.</p>\n\n<p>method : int, optional\n    The convolution method to use. Default: 1.\n    The following methods are valid:\n    1. sum\n    2. max\n    3. min\n    4. mean\n    5. median\n    6. variance\n    7. standard deviation\n    8. contrast\n    9. mode\n    10. median absolute deviation (mad)\n    11. z-score\n    12. z-score (mad)\n    13. sigma lee\n    14. quantile\n    15. occurances\n    16. feather\n    17. roughness\n    18. roughness tri\n    19. roughness tpi</p>\n\n<p>nodata : bool, optional\n    If True, treat the nodata value as a valid value. Default: False.</p>\n\n<p>nodata_value : float, optional\n    The nodata value to use when computing the result. Default: -9999.9.</p>\n\n<p>func_value : int or float, optional\n    The value to use for pixels where the kernel extends outside the input array.\n    If None, use the edge value. Default: 0.5.</p>\n\n<p>channel_last : bool, optional\n    Whether the channels are the last axis in the array. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>numpy.ndarray\n    The convolved array.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This function convolves an array using a set of offsets and weights. The function supports\ndifferent convolution methods, including nearest, linear, and cubic. The function can also\nhandle nodata values and cases where the kernel extends outside the input array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">offsets</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">weights</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">nodata</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">9999.9</span>,</span><span class=\"param\">\t<span class=\"n\">func_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution_funcs", "modulename": "buteo.array.convolution_funcs", "kind": "module", "doc": "<h3 id=\"convolutions-functions-on-arrays\">Convolutions functions on arrays.</h3>\n"}, {"fullname": "buteo.array.convolution_kernels", "modulename": "buteo.array.convolution_kernels", "kind": "module", "doc": "<h3 id=\"convolutions-kernels\">Convolutions kernels.</h3>\n"}, {"fullname": "buteo.array.convolution_kernels.kernel_base", "modulename": "buteo.array.convolution_kernels", "qualname": "kernel_base", "kind": "function", "doc": "<p>Creates a 2D kernel for convolution.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>radius : float\n    Radius of the kernel.</p>\n\n<p>circular : bool\n    Whether to use a circular kernel.</p>\n\n<p>distance_weighted : bool\n    Whether to use a distance weighted kernel.</p>\n\n<p>normalised : bool\n    Whether to normalise the kernel.</p>\n\n<p>hole : bool\n    Whether to create a hole in the center of the kernel.</p>\n\n<p>method : int\n    Method to use for weighting.\n    0. linear\n    1. sqrt\n    2. power\n    3. gaussian\n    4. constant</p>\n\n<p>decay : float\n    Decay rate for distance weighted kernels. Only used if <code>distance_weighted</code> is True.</p>\n\n<p>sigma : float\n    Sigma for gaussian distance weighted kernels. Only used if <code>distance_weighted</code> is True and <code>method</code> is 3.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>kernel : np.ndarray\n    The kernel.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">circular</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">normalised</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">hole</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">decay</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">sigma</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution_kernels.kernel_shift", "modulename": "buteo.array.convolution_kernels", "qualname": "kernel_shift", "kind": "function", "doc": "<p>Create a 2D shift kernel.</p>\n\n<p>This function returns a kernel that can be used to shift a raster by a fractional\nnumber of pixels in the x and y directions. The kernel can also be used to simulate\nchannel misalignment in image augmentation.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x_offset : float\n    The horizontal (x) offset to apply.</p>\n\n<p>y_offset : float\n    The vertical (y) offset to apply.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    A tuple of two numpy arrays. The first array contains the (x, y) offsets\n    of the kernel values. The second array contains the corresponding weights\n    of each kernel value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x_offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">y_offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution_kernels.kernel_unsharp", "modulename": "buteo.array.convolution_kernels", "qualname": "kernel_unsharp", "kind": "function", "doc": "<p>Create a 2D unsharp kernel.</p>\n\n<p>This function returns a kernel that can be used to apply an unsharp mask to an image.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>radius : float, optional\n    The radius of the kernel. Default: 1.0.</p>\n\n<p>intensity : float, optional\n    The intensity of the unsharp mask. Default: 1.0.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The kernel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">intensity</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution_kernels.kernel_sobel", "modulename": "buteo.array.convolution_kernels", "qualname": "kernel_sobel", "kind": "function", "doc": "<p>Creates a 2D Sobel style kernel consisting of a horizontal and vertical component.\nThis function returns a kernel that can be used to apply a Sobel filter to an image.</p>\n\n<p><code>kernel_gx, kernel_gy = get_kernel_sobel(radius=1, scale=2)</code></p>\n\n<p>The kernels for radis=2, scale=2 are:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">gx</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">[</span> <span class=\"mf\">0.56</span>  <span class=\"mf\">0.85</span>  <span class=\"mf\">0.</span>   <span class=\"o\">-</span><span class=\"mf\">0.85</span> <span class=\"o\">-</span><span class=\"mf\">0.56</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span> <span class=\"mf\">0.85</span>  <span class=\"mf\">1.5</span>   <span class=\"mf\">0.</span>   <span class=\"o\">-</span><span class=\"mf\">1.5</span>  <span class=\"o\">-</span><span class=\"mf\">0.85</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span> <span class=\"mf\">1.</span>    <span class=\"mf\">2.</span>    <span class=\"mf\">0.</span>   <span class=\"o\">-</span><span class=\"mf\">2.</span>   <span class=\"o\">-</span><span class=\"mf\">1.</span>  <span class=\"p\">],</span>\n    <span class=\"p\">[</span> <span class=\"mf\">0.85</span>  <span class=\"mf\">1.5</span>   <span class=\"mf\">0.</span>   <span class=\"o\">-</span><span class=\"mf\">1.5</span>  <span class=\"o\">-</span><span class=\"mf\">0.85</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span> <span class=\"mf\">0.56</span>  <span class=\"mf\">0.85</span>  <span class=\"mf\">0.</span>   <span class=\"o\">-</span><span class=\"mf\">0.85</span> <span class=\"o\">-</span><span class=\"mf\">0.56</span><span class=\"p\">],</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">gy</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">[</span> <span class=\"mf\">0.56</span>  <span class=\"mf\">0.85</span>  <span class=\"mf\">1.</span>    <span class=\"mf\">0.85</span>  <span class=\"mf\">0.56</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span> <span class=\"mf\">0.85</span>  <span class=\"mf\">1.5</span>   <span class=\"mf\">2.</span>    <span class=\"mf\">1.5</span>   <span class=\"mf\">0.85</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span> <span class=\"mf\">0.</span>    <span class=\"mf\">0.</span>    <span class=\"mf\">0.</span>    <span class=\"mf\">0.</span>    <span class=\"mf\">0.</span>  <span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.85</span> <span class=\"o\">-</span><span class=\"mf\">1.5</span>  <span class=\"o\">-</span><span class=\"mf\">2.</span>   <span class=\"o\">-</span><span class=\"mf\">1.5</span>  <span class=\"o\">-</span><span class=\"mf\">0.85</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.56</span> <span class=\"o\">-</span><span class=\"mf\">0.85</span> <span class=\"o\">-</span><span class=\"mf\">1.</span>   <span class=\"o\">-</span><span class=\"mf\">0.85</span> <span class=\"o\">-</span><span class=\"mf\">0.56</span><span class=\"p\">],</span>\n<span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>radius : float, optional\n    The radius of the kernel. Default: 1.0.</p>\n\n<p>scale : float, optional\n    The scale of the kernel. Default: 2.0.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    The kernels</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.convolution_kernels.kernel_get_offsets_and_weights", "modulename": "buteo.array.convolution_kernels", "qualname": "kernel_get_offsets_and_weights", "kind": "function", "doc": "<p>Generates a list of offsets and weights for a given kernel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>kernel : np.ndarray\n    The kernel to generate offsets and weights for.</p>\n\n<p>remove_zero_weights : bool, optional\n    Whether to remove offsets and weights with zero weights. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple[np.ndarray, np.ndarray]\n    The offsets and weights</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kernel</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">remove_zero_weights</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.distance", "modulename": "buteo.array.distance", "kind": "module", "doc": "<h3 id=\"distance-calculation-module\">Distance Calculation Module.</h3>\n"}, {"fullname": "buteo.array.distance.convolve_distance", "modulename": "buteo.array.distance", "qualname": "convolve_distance", "kind": "function", "doc": "<p>Calculate the distance from each pixel to the nearest target pixel.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>array : np.ndarray\n    The array to calculate the distances for.</p>\n\n<p>target : Union[int, float], optional\n    The target value to calculate the distance to. Default: 1.</p>\n\n<p>maximum_distance : Union[int, float], optional\n    The maximum distance to calculate. Default: None.</p>\n\n<p>pixel_width : Union[int, float], optional\n    The width of each pixel. Default: 1.</p>\n\n<p>pixel_height : Union[int, float], optional\n    The height of each pixel. Default: 1.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The array of distances.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">maximum_distance</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.edge_detection", "modulename": "buteo.array.edge_detection", "kind": "module", "doc": "<h3 id=\"edge-detection-functions\">Edge Detection functions.</h3>\n"}, {"fullname": "buteo.array.edge_detection.filter_edge_detection", "modulename": "buteo.array.edge_detection", "qualname": "filter_edge_detection", "kind": "function", "doc": "<p>Perform edge detection on an array using a Sobel-style operator.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Input array.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the kernel. Default: 1 (3x3 kernel)\n    The radius can be fractional.</p>\n\n<p>scale : Union[int, float], optional\n    scale of the edge detection. Increase to increase the\n    sensitivity of the edge detection. This can also be fractional.\n    Default: 1.0</p>\n\n<p>gradient : bool, optional\n    Return the gradient as well as the magnitude, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    Edge detection result.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">gradient</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.fill", "modulename": "buteo.array.fill", "kind": "module", "doc": "<h3 id=\"fill-nearest-or-nodata-values\">Fill nearest or nodata values.</h3>\n"}, {"fullname": "buteo.array.fill.convolve_fill_nearest", "modulename": "buteo.array.fill", "qualname": "convolve_fill_nearest", "kind": "function", "doc": "<p>Fill in nodata values with the average of the nearest values.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>array : np.ndarray\n    The array to fill in the nodata values for.</p>\n\n<p>nodata_value : Union[int, float]\n    The value to use as the nodata value.</p>\n\n<p>mask : Optional[np.ndarray], optional\n    The mask to use. Default: None.</p>\n\n<p>max_iterations : Optional[Union[int, float]], optional\n    The maximum number of iterations to run. Default: None.</p>\n\n<p>channel : int, optional\n    The channel to use. Default: 0.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The filled in array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.fill.convolve_fill_nearest_classes", "modulename": "buteo.array.fill", "qualname": "convolve_fill_nearest_classes", "kind": "function", "doc": "<p>Fill in nodata values with the average of the nearest values.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>array : np.ndarray\n    The array to fill in the nodata values for.</p>\n\n<p>nodata_value : Union[int, float]\n    The value to use as the nodata value.</p>\n\n<p>mask : Optional[np.ndarray], optional\n    The mask to use. Default: None.</p>\n\n<p>max_iterations : Optional[Union[int, float]], optional\n    The maximum number of iterations to run. Default: None.</p>\n\n<p>channel : int, optional\n    The channel to use. Default: 0.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The filled in array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">max_iterations</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">channel</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters", "modulename": "buteo.array.filters", "kind": "module", "doc": "<h3 id=\"perform-filter-operations-on-arrays-and-rasters\">Perform filter operations on arrays and rasters.</h3>\n"}, {"fullname": "buteo.array.filters.filter_operation", "modulename": "buteo.array.filters", "qualname": "filter_operation", "kind": "function", "doc": "<p>Internal function to perform filter operations on arrays and rasters.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">normalised</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">hole</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">func_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">kernel</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_variance", "modulename": "buteo.array.filters", "qualname": "filter_variance", "kind": "function", "doc": "<p>Calculate the variance of the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to calculate variance on.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1</p>\n\n<p>spherical : bool, optional\n    Whether to use a spherical moving window, default: True.</p>\n\n<p>distance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.</p>\n\n<p>distance_method : int, optional\n    Method to use for distance weighting, default: 0.</p>\n\n<p>distance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.</p>\n\n<p>distance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.</p>\n\n<p>channel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The variance filtered array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_standard_deviation", "modulename": "buteo.array.filters", "qualname": "filter_standard_deviation", "kind": "function", "doc": "<p>Calculate the standard deviation of the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to calculate standard deviation on.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1</p>\n\n<p>spherical : bool, optional\n    Whether to use a spherical moving window, default: True.</p>\n\n<p>distance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.</p>\n\n<p>distance_method : int, optional\n    Method to use for distance weighting, default: 0.</p>\n\n<p>distance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.</p>\n\n<p>distance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.</p>\n\n<p>channel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The standard deviation filtered array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_blur", "modulename": "buteo.array.filters", "qualname": "filter_blur", "kind": "function", "doc": "<p>Blur the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to blur.\nradius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1\nspherical : bool, optional\n    Whether to use a spherical moving window, default: True.\ndistance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.\ndistance_method : int, optional\n    Method to use for distance weighting, default: 0.\ndistance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.\ndistance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.\nchannel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The blurred array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_median", "modulename": "buteo.array.filters", "qualname": "filter_median", "kind": "function", "doc": "<p>Calculate the median of the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to blur.\nradius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1\nspherical : bool, optional\n    Whether to use a spherical moving window, default: True.\ndistance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.\ndistance_method : int, optional\n    Method to use for distance weighting, default: 0.\ndistance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.\ndistance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.\nchannel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The median filtered array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_min", "modulename": "buteo.array.filters", "qualname": "filter_min", "kind": "function", "doc": "<p>Takes the min of the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to blur.\nradius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1\nspherical : bool, optional\n    Whether to use a spherical moving window, default: True.\ndistance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.\ndistance_method : int, optional\n    Method to use for distance weighting, default: 0.\ndistance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.\ndistance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.\nchannel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The min filtered array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_max", "modulename": "buteo.array.filters", "qualname": "filter_max", "kind": "function", "doc": "<p>Takes the max of the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to blur.\nradius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1\nspherical : bool, optional\n    Whether to use a spherical moving window, default: True.\ndistance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.\ndistance_method : int, optional\n    Method to use for distance weighting, default: 0.\ndistance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.\ndistance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.\nchannel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The max filtered array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_sum", "modulename": "buteo.array.filters", "qualname": "filter_sum", "kind": "function", "doc": "<p>Takes the sum of the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to blur.\nradius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1\nspherical : bool, optional\n    Whether to use a spherical moving window, default: True.\ndistance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.\ndistance_method : int, optional\n    Method to use for distance weighting, default: 0.\ndistance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.\ndistance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.\nchannel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The sum filtered array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_mode", "modulename": "buteo.array.filters", "qualname": "filter_mode", "kind": "function", "doc": "<p>Takes the mode of the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to blur.\nradius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1\nspherical : bool, optional\n    Whether to use a spherical moving window, default: True.\ndistance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.\ndistance_method : int, optional\n    Method to use for distance weighting, default: 0.\ndistance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.\ndistance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.\nchannel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The mode filtered array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.filters.filter_center_difference", "modulename": "buteo.array.filters", "qualname": "filter_center_difference", "kind": "function", "doc": "<p>Take the difference from the center to the surrounding values of the array using a weighted moving window.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Array to blur.\nradius : Union[int, float], optional\n    Radius of the moving window, can be fractional. Default: 1\nspherical : bool, optional\n    Whether to use a spherical moving window, default: True.\ndistance_weighted : bool, optional\n    Whether to weight the moving window by distance, default: False.\ndistance_method : int, optional\n    Method to use for distance weighting, default: 0.\ndistance_decay : Union[int, float], optional\n    Decay rate for distance weighting, default: 0.2.\ndistance_sigma : Union[int, float], optional\n    Sigma for distance weighting, default: 2.0.\nchannel_last : bool, optional\n    Whether the channels are the last dimension, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The center difference filtered array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">distance_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">distance_method</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">distance_decay</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">distance_sigma</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.loaders", "modulename": "buteo.array.loaders", "kind": "module", "doc": "<h3 id=\"data-loaders-multiarray\">Data loaders: MultiArray.</h3>\n"}, {"fullname": "buteo.array.loaders.MultiArray", "modulename": "buteo.array.loaders", "qualname": "MultiArray", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.array.loaders.MultiArray.__init__", "modulename": "buteo.array.loaders", "qualname": "MultiArray.__init__", "kind": "function", "doc": "<p>This is a class that takes in a tuple of list of arrays and glues them together\nwithout concatenating them. This is useful for when you have a large\ndataset that you want to load into memory, but you don't want to\nconcatenate them because that would take up too much memory.</p>\n\n<p>The function works for saved numpy arrays loading using mmap_mode=\"r\".</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>array_list : List[Union[np.ndarray, np.memmap]]\n    A list of numpy arrays to load as one. Can be mmaped or not.</p>\n\n<p>shuffle : bool, default: False\n    Whether to shuffle the data or not. Cannot be used together with random_sampling.\n    This is different from random sampling in that it ensures that all data will be used.\n    It creates an index array that is shuffled and then uses that to index the MultiArray.</p>\n\n<p>random_sampling : bool, default: False\n    Whether to use random sampling or not. If True, the returned data will be randomly sampled from the MultiArray.\n    Cannot be used together with shuffling.\n    Does not ensure that all data will be used, but it will be randomly (uniform) sampled.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>MultiArray\n    A class that can handle multiple memmapped numpy arrays.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">glob</span> <span class=\"kn\">import</span> <span class=\"n\">glob</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;./data_patches/&quot;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">patches</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">folder</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;train*.npy&quot;</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">multi_array</span> <span class=\"o\">=</span> <span class=\"n\">MultiArray</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">mmap_mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">patches</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">single_image</span> <span class=\"o\">=</span> <span class=\"n\">multi_array</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">single_image</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">multi_array</span><span class=\"p\">))</span>\n<span class=\"mi\">32</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">array_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">memmap</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">random_sampling</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>,</span><span class=\"param\">\t<span class=\"n\">_idx_start</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">_idx_end</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">_is_subarray</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "buteo.array.loaders.MultiArray.set_shuffle_index", "modulename": "buteo.array.loaders", "qualname": "MultiArray.set_shuffle_index", "kind": "function", "doc": "<p>Set the shuffle indices and enable shuffling.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shuffle_indices</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.loaders.MultiArray.get_shuffle_index", "modulename": "buteo.array.loaders", "qualname": "MultiArray.get_shuffle_index", "kind": "function", "doc": "<p>Get the shuffle indices.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.loaders.MultiArray.shuffle_index", "modulename": "buteo.array.loaders", "qualname": "MultiArray.shuffle_index", "kind": "function", "doc": "<p>Shuffle the MultiArray.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.loaders.MultiArray.disable_shuffle", "modulename": "buteo.array.loaders", "qualname": "MultiArray.disable_shuffle", "kind": "function", "doc": "<p>Disable shuffling.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.loaders.MultiArray.split", "modulename": "buteo.array.loaders", "qualname": "MultiArray.split", "kind": "function", "doc": "<p>Split the MultiArray into two MultiArrays.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>split_point : int or float\n    The split point for the multi array. If float, it will be interpreted as a percentage.\n    If int, it will be interpreted as an index.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>MultiArray, MultiArray\n    Two MultiArray objects. (before_split_point, after_split_point)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">split_point</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">buteo</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">loaders</span><span class=\"o\">.</span><span class=\"n\">MultiArray</span><span class=\"p\">,</span> <span class=\"n\">buteo</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">loaders</span><span class=\"o\">.</span><span class=\"n\">MultiArray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.morphology", "modulename": "buteo.array.morphology", "kind": "module", "doc": "<h3 id=\"perform-morphological-operations-on-arrays-and-rasters\">Perform morphological operations on arrays and rasters.</h3>\n"}, {"fullname": "buteo.array.morphology.morph_erode", "modulename": "buteo.array.morphology", "qualname": "morph_erode", "kind": "function", "doc": "<p>Erode an array by taking the local minimum.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Input array.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the kernel. Default: 1 (3x3 kernel)</p>\n\n<p>spherical : bool, optional\n    Use a spherical kernel. Default: True</p>\n\n<p>channel_last : bool, optional\n    If True, the channel axis is the last axis. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    Eroded array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.morphology.morph_dilate", "modulename": "buteo.array.morphology", "qualname": "morph_dilate", "kind": "function", "doc": "<p>Dilate an array by taking the local maximum.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Input array.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the kernel. Default: 1 (3x3 kernel)</p>\n\n<p>spherical : bool, optional\n    Use a spherical kernel. Default: True</p>\n\n<p>channel_last : bool, optional\n    If True, the channel axis is the last axis. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    Dilated array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.morphology.morph_open", "modulename": "buteo.array.morphology", "qualname": "morph_open", "kind": "function", "doc": "<p>Perform the open mortholigical operation on an array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Input array.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the kernel. Default: 1 (3x3 kernel)</p>\n\n<p>spherical : bool, optional\n    Use a spherical kernel. Default: True</p>\n\n<p>channel_last : bool, optional\n    If True, the channel axis is the last axis. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    Opened array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.morphology.morph_close", "modulename": "buteo.array.morphology", "qualname": "morph_close", "kind": "function", "doc": "<p>Perform the close morphological operation on an array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Input array.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the kernel. Default: 1 (3x3 kernel)</p>\n\n<p>spherical : bool, optional\n    Use a spherical kernel. Default: True</p>\n\n<p>channel_last : bool, optional\n    If True, the channel axis is the last axis. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    Closed array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.morphology.morph_tophat", "modulename": "buteo.array.morphology", "qualname": "morph_tophat", "kind": "function", "doc": "<p>Perform the top_hat morphological operation on an array.</p>\n\n<p>Same as: <code>array / opened(array)</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Input array.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the kernel. Default: 1 (3x3 kernel)</p>\n\n<p>spherical : bool, optional\n    Use a spherical kernel. Default: True</p>\n\n<p>channel_last : bool, optional\n    If True, the channel axis is the last axis. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    TopHat array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.morphology.morph_bothat", "modulename": "buteo.array.morphology", "qualname": "morph_bothat", "kind": "function", "doc": "<p>Perform the bottom_hat morphological operation on an array.</p>\n\n<p>Same as: <code>closed(array) / array</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Input array.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the kernel. Default: 1 (3x3 kernel)</p>\n\n<p>spherical : bool, optional\n    Use a spherical kernel. Default: True</p>\n\n<p>channel_last : bool, optional\n    If True, the channel axis is the last axis. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    BotHat array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.morphology.morph_difference", "modulename": "buteo.array.morphology", "qualname": "morph_difference", "kind": "function", "doc": "<p>Perform the difference morphological operation on an array.</p>\n\n<p>Same as: <code>dilate(array) - erode(array)</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    Input array.</p>\n\n<p>radius : Union[int, float], optional\n    Radius of the kernel. Default: 1 (3x3 kernel)</p>\n\n<p>spherical : bool, optional\n    Use a spherical kernel. Default: True</p>\n\n<p>channel_last : bool, optional\n    If True, the channel axis is the last axis. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    Difference array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">spherical</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.patches", "modulename": "buteo.array.patches", "kind": "module", "doc": "<h3 id=\"create-patches-from-rasters\">Create patches from rasters.</h3>\n"}, {"fullname": "buteo.array.patches.array_to_patches", "modulename": "buteo.array.patches", "qualname": "array_to_patches", "kind": "function", "doc": "<p>Generate patches from an array based on the specified parameters.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    A numpy array to be divided into patches.</p>\n\n<p>tile_size : int\n    The size of each tile/patch, e.g., 64 for 64x64 tiles.</p>\n\n<p>n_offsets : int, optional\n    The desired number of offsets to be calculated. Default: 0</p>\n\n<p>border_check : bool, optional\n    Whether or not to include border patches. Default: True</p>\n\n<p>channel_last : bool, optional\n    Whether or not the channel dimension is the last dimension. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The concatenate patches along axis 0. In the order (patches, y, x, channels)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">tile_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">n_offsets</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">border_check</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.patches.predict_array", "modulename": "buteo.array.patches", "qualname": "predict_array", "kind": "function", "doc": "<p>Generate patches from an array. Also outputs the offsets and the shapes of the offsets. Only\nsuppors the prediction of single values in the rasters/arrays.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    A numpy array to be divided into patches.</p>\n\n<p>callback : Callable[[np.ndarray], np.ndarray]\n    The callback function to be used for prediction. The callback function\n    must take a numpy array as input and return a numpy array as output.</p>\n\n<p>tile_size : int, optional\n    The size of each tile/patch, e.g., 64 for 64x64 tiles. Default: 64</p>\n\n<p>n_offsets : int, optional\n    The desired number of offsets to be calculated. Default: 1</p>\n\n<p>border_check : bool, optional\n    Whether or not to include border patches. Default: True</p>\n\n<p>merge_method : str, optional\n    The method to use for merging the patches. Valid methods\n    are ['mad', 'median', 'mean', 'mode', \"min\", \"max\", \"olympic1\", \"olympic2\"]. Default: \"median\"</p>\n\n<p>edge_weighted : bool, optional\n    Whether or not to weight the edges patches of patches less than the central parts. Default: True</p>\n\n<p>edge_distance : int, optional\n    The distance from the edge to be weighted less. Usually good to\n    adjust this to your maximum convolution kernel size. Default: 3</p>\n\n<p>batch_size : int, optional\n    The batch size to use for prediction. Default: 1</p>\n\n<p>channel_last : bool, optional\n    Whether or not the channel dimension is the last dimension. Default: True</p>\n\n<p>background_value : Optional[Union[int, float]], optional\n    The value to use for the background. If not provided, defaults to np.nan.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The predicted array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">tile_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">n_offsets</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">border_check</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">merge_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;median&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">edge_weighted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">edge_distance</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">background_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.patches.predict_array_pixel", "modulename": "buteo.array.patches", "qualname": "predict_array_pixel", "kind": "function", "doc": "<p>Predicts an array pixel by pixel.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>arr (np.ndarray):</strong>  A numpy array to be divided into patches.</li>\n<li><strong>callback (function):</strong>  The callback function to be used for prediction. The callback function\nmust take a numpy array as input and return a numpy array as output.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.timeseries", "modulename": "buteo.array.timeseries", "kind": "module", "doc": "<h3 id=\"time-series-analysis-functions\">Time series analysis functions.</h3>\n"}, {"fullname": "buteo.array.timeseries.timeseries_least_square_slope", "modulename": "buteo.array.timeseries", "qualname": "timeseries_least_square_slope", "kind": "function", "doc": "<p>Compute the least squares slope for a set of data points along the last channel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.timeseries.timeseries_robust_least_squares_slope", "modulename": "buteo.array.timeseries", "qualname": "timeseries_robust_least_squares_slope", "kind": "function", "doc": "<p>Compute the robust least squares slope for a set of data points along the last channel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span>, </span><span class=\"param\"><span class=\"n\">std_threshold</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">splits</span><span class=\"o\">=</span><span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">report_progress</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array", "modulename": "buteo.array.utils_array", "kind": "module", "doc": "<h3 id=\"generic-utility-functions-for-arrays\">Generic utility functions for arrays.</h3>\n"}, {"fullname": "buteo.array.utils_array.channel_first_to_last", "modulename": "buteo.array.utils_array", "qualname": "channel_first_to_last", "kind": "function", "doc": "<p>Converts a numpy array from channel first to channel last format.\n<code>(-batch-, channel, height, width)</code> -> <code>(-batch-, height, width, channel)</code></p>\n\n<p>If 4D, it is assumed that the input array is in batch, channel, height, width format.\nIf 3D, it is assumed that the input array is in channel, height, width format.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The array to convert.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The converted array.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.channel_last_to_first", "modulename": "buteo.array.utils_array", "qualname": "channel_last_to_first", "kind": "function", "doc": "<p>Converts a numpy array from channel last to channel first format.</p>\n\n<p><code>(-batch-, height, width, channel)</code> -> <code>(-batch-, channel, height, width)</code></p>\n\n<p>If 4D, it is assumed that the input array is in batch, channel, height, width format.\nIf 3D, it is assumed that the input array is in channel, height, width format.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>arr : np.ndarray\n    The array to convert.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    The converted array.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.encode_latitude", "modulename": "buteo.array.utils_array", "qualname": "encode_latitude", "kind": "function", "doc": "<p>Latitude goes from -90 to 90</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.encode_longitude", "modulename": "buteo.array.utils_array", "qualname": "encode_longitude", "kind": "function", "doc": "<p>Longitude goes from -180 to 180</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lng</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.encode_latlng", "modulename": "buteo.array.utils_array", "qualname": "encode_latlng", "kind": "function", "doc": "<p>Encode latitude and longitude values to be used as input to the model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">latlng</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.encode_latlngs", "modulename": "buteo.array.utils_array", "qualname": "encode_latlngs", "kind": "function", "doc": "<p>Encode multiple latitude and longitude values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">latlngs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.decode_latitude", "modulename": "buteo.array.utils_array", "qualname": "decode_latitude", "kind": "function", "doc": "<p>Decode encoded latitude values to the original latitude value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">encoded_sin</span>, </span><span class=\"param\"><span class=\"n\">encoded_cos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.decode_longitude", "modulename": "buteo.array.utils_array", "qualname": "decode_longitude", "kind": "function", "doc": "<p>Decode encoded longitude values to the original longitude value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">encoded_sin</span>, </span><span class=\"param\"><span class=\"n\">encoded_cos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.decode_latlng", "modulename": "buteo.array.utils_array", "qualname": "decode_latlng", "kind": "function", "doc": "<p>Decode encoded latitude and longitude values to the original values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">encoded_latlng</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.decode_latlngs", "modulename": "buteo.array.utils_array", "qualname": "decode_latlngs", "kind": "function", "doc": "<p>Decode multiple latitude and longitude values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">encoded_latlngs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.encode_width", "modulename": "buteo.array.utils_array", "qualname": "encode_width", "kind": "function", "doc": "<p>Longitude goes from -180 to 180</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lng</span>, </span><span class=\"param\"><span class=\"n\">lng_max</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.single_hue_to_rgb", "modulename": "buteo.array.utils_array", "qualname": "single_hue_to_rgb", "kind": "function", "doc": "<p>Helper function to convert hue to RGB.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>p (float):</strong>  Intermediate value used for hue to RGB conversion.</li>\n<li><strong>q (float):</strong>  Intermediate value used for hue to RGB conversion.</li>\n<li><strong>t (float):</strong>  Hue value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: RGB value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">q</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.single_hsl_to_rgb", "modulename": "buteo.array.utils_array", "qualname": "single_hsl_to_rgb", "kind": "function", "doc": "<p>Convert a single HSL color to RGB.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>h (float):</strong>  Hue component.</li>\n<li><strong>s (float):</strong>  Saturation component.</li>\n<li><strong>l (float):</strong>  Lightness component.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tuple[float, float, float]: Tuple of RGB values (r, g, b).</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">h</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.hsl_to_rgb", "modulename": "buteo.array.utils_array", "qualname": "hsl_to_rgb", "kind": "function", "doc": "<p>Convert an HSL array to an RGB array.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>hsl_array (np.ndarray):</strong>  Input HSL array with shape (height, width, 3).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: Output RGB array with shape (height, width, 3).</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hsl_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.array.utils_array.rgb_to_hsl", "modulename": "buteo.array.utils_array", "qualname": "rgb_to_hsl", "kind": "function", "doc": "<p>Convert an RGB array to an HSL array.</p>\n\n<p>Args:\nrgb_array (np.ndarray): Input RGB array with shape (height, width, 3).</p>\n\n<p>Returns:\nnp.ndarray: Output HSL array with shape (height, width, 3).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgb_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings", "modulename": "buteo.bindings", "kind": "module", "doc": "<h3 id=\"bindings-for-thirdparty-libraries\">Bindings for thirdparty libraries.</h3>\n"}, {"fullname": "buteo.bindings.orfeo", "modulename": "buteo.bindings.orfeo", "kind": "module", "doc": "<h3 id=\"bindings-to-interact-with-the-orfeo-toolbox\">Bindings to interact with the orfeo-toolbox ###</h3>\n\n<h6 id=\"todo\">TODO:</h6>\n\n<blockquote>\n  <ul>\n  <li>Documentation</li>\n  </ul>\n</blockquote>\n"}, {"fullname": "buteo.bindings.orfeo.execute_cli_function", "modulename": "buteo.bindings.orfeo", "qualname": "execute_cli_function", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">command</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_pansharpen", "modulename": "buteo.bindings.orfeo", "qualname": "otb_pansharpen", "kind": "function", "doc": "<p>Pansharpen an image using the attributes\nof another image. Beware that the two images\nshould be of the same size and position.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">in_pan</span>, </span><span class=\"param\"><span class=\"n\">in_xs</span>, </span><span class=\"param\"><span class=\"n\">out_raster</span>, </span><span class=\"param\"><span class=\"n\">options</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">out_datatype</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_local_stats", "modulename": "buteo.bindings.orfeo", "qualname": "otb_local_stats", "kind": "function", "doc": "<p>Computes local statistical moments on every pixel\nin the selected channel of the input image</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">in_raster</span>, </span><span class=\"param\"><span class=\"n\">out_raster</span>, </span><span class=\"param\"><span class=\"n\">options</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">band</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_haralick", "modulename": "buteo.bindings.orfeo", "qualname": "otb_haralick", "kind": "function", "doc": "<p>Performs haralick texture extraction</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">in_raster</span>, </span><span class=\"param\"><span class=\"n\">out_raster</span>, </span><span class=\"param\"><span class=\"n\">options</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">out_datatype</span><span class=\"o\">=</span><span class=\"s1\">&#39;float&#39;</span>, </span><span class=\"param\"><span class=\"n\">band</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_dimension_reduction", "modulename": "buteo.bindings.orfeo", "qualname": "otb_dimension_reduction", "kind": "function", "doc": "<p>Performs dimensionality reduction on input image.\nPCA,NA-PCA,MAF,ICA methods are available.\nIt is also possible to compute the inverse transform\nto reconstruct the image. It is also possible to\noptionally export the transformation matrix\nto a text file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">in_raster</span>, </span><span class=\"param\"><span class=\"n\">out_raster</span>, </span><span class=\"param\"><span class=\"n\">options</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">out_datatype</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_concatenate_images", "modulename": "buteo.bindings.orfeo", "qualname": "otb_concatenate_images", "kind": "function", "doc": "<p>This application performs images channels concatenation.\nIt reads the input image list (single or multi-channel) and\ngenerates a single multi-channel image. The channel order\nis the same as the list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">in_rasters</span>, </span><span class=\"param\"><span class=\"n\">out_raster</span>, </span><span class=\"param\"><span class=\"n\">ram</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">out_datatype</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_split_images", "modulename": "buteo.bindings.orfeo", "qualname": "otb_split_images", "kind": "function", "doc": "<p>This application splits a N-bands image into N mono-band images.\nThe output images filename will be generated from the output parameter.\nThus, if the input image has 2 channels, and the user has set as\noutput parameter, outimage.tif, the generated images will be\noutimage_0.tif and outimage_1.tif.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">in_raster</span>, </span><span class=\"param\"><span class=\"n\">out_rasters</span>, </span><span class=\"param\"><span class=\"n\">ram</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">out_datatype</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_rescale", "modulename": "buteo.bindings.orfeo", "qualname": "otb_rescale", "kind": "function", "doc": "<p>This application scales the given image pixel intensity between two given values.\nBy default min (resp. max) value is set to 0 (resp. 1).\nInput minimum and maximum values is automatically computed for all image bands.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">in_raster</span>, </span><span class=\"param\"><span class=\"n\">out_raster</span>, </span><span class=\"param\"><span class=\"n\">options</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">out_datatype</span><span class=\"o\">=</span><span class=\"s1\">&#39;float&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_merge_rasters", "modulename": "buteo.bindings.orfeo", "qualname": "otb_merge_rasters", "kind": "function", "doc": "<p>Creates a mosaic out of a series of images. Must be of the same projection</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">in_rasters</span>,</span><span class=\"param\">\t<span class=\"n\">out_raster</span>,</span><span class=\"param\">\t<span class=\"n\">options</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">band</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out_datatype</span><span class=\"o\">=</span><span class=\"s1\">&#39;uint16&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tmp</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ram</span><span class=\"o\">=</span><span class=\"mi\">42000</span>,</span><span class=\"param\">\t<span class=\"n\">obt_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;C:/Program Files/OTB-7.4.0-Win64/&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">harmonisation</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_value</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_height</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_fine_registration", "modulename": "buteo.bindings.orfeo", "qualname": "otb_fine_registration", "kind": "function", "doc": "<p>Finely coregisters two images</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">reference_image</span>,</span><span class=\"param\">\t<span class=\"n\">secondary_image</span>,</span><span class=\"param\">\t<span class=\"n\">warp_image</span>,</span><span class=\"param\">\t<span class=\"n\">out_raster</span>,</span><span class=\"param\">\t<span class=\"n\">out_raster_warp</span>,</span><span class=\"param\">\t<span class=\"n\">options</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">band</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ram</span><span class=\"o\">=</span><span class=\"mi\">32000</span>,</span><span class=\"param\">\t<span class=\"n\">otb_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;C:/Program Files/OTB-7.4.0-Win64/&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">erx</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">ery</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">mrx</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">mry</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">rgsx</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">rgsy</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">sgsx</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">sgsy</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">threads</span><span class=\"o\">=-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.obt_bandmath", "modulename": "buteo.bindings.orfeo", "qualname": "obt_bandmath", "kind": "function", "doc": "<p>Creates a mosaic out of a series of images. Must be of the same projection</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">in_rasters</span>,</span><span class=\"param\">\t<span class=\"n\">expression</span>,</span><span class=\"param\">\t<span class=\"n\">out_raster</span>,</span><span class=\"param\">\t<span class=\"n\">band</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ram</span><span class=\"o\">=</span><span class=\"mi\">42000</span>,</span><span class=\"param\">\t<span class=\"n\">out_datatype</span><span class=\"o\">=</span><span class=\"s1\">&#39;float&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">obt_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;C:/Program Files/OTB-7.4.0-Win64/&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.bindings.orfeo.otb_meanshift_segmentation", "modulename": "buteo.bindings.orfeo", "qualname": "otb_meanshift_segmentation", "kind": "function", "doc": "<p>Computes local statistical moments on every pixel\nin the selected channel of the input image</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">in_raster</span>,</span><span class=\"param\">\t<span class=\"n\">out_geom</span>,</span><span class=\"param\">\t<span class=\"n\">spatialr</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">ranger</span><span class=\"o\">=</span><span class=\"mi\">15</span>,</span><span class=\"param\">\t<span class=\"n\">thres</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">maxiter</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">minsize</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">stitch</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">neighbor</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">vector_minsize</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">tilesize</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo", "modulename": "buteo.eo", "kind": "module", "doc": "<h3 id=\"tools-for-working-with-sentinel-data\">Tools for working with Sentinel data.</h3>\n"}, {"fullname": "buteo.eo.s1_preprocess", "modulename": "buteo.eo.s1_preprocess", "kind": "module", "doc": "<h3 id=\"this-module-preprocesses-sentinel-1-data-using-snap-gpt\">This module preprocesses Sentinel-1 data. Using SNAP GPT.</h3>\n\n<h6 id=\"todo\">TODO:</h6>\n\n<blockquote>\n  <ul>\n  <li>Enable support for processing only VV or VH.</li>\n  <li>Improve documentation</li>\n  </ul>\n</blockquote>\n"}, {"fullname": "buteo.eo.s1_preprocess.s1_backscatter", "modulename": "buteo.eo.s1_preprocess", "qualname": "s1_backscatter", "kind": "function", "doc": "<p>Calculate backscatter from Sentinel-1 GRD data.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>zip_file : str\n    Path to the Sentinel-1 zip file.</p>\n\n<p>out_path : str\n    Path to the output folder.</p>\n\n<p>tmp_folder : str\n    Path to the temporary folder.</p>\n\n<p>extent : list, optional\n    The extent of the output raster in the format [xmin, xmax, ymin, ymax].\n    Default: None</p>\n\n<p>epsg : int, optional\n    The EPSG code of the output raster. Default: None</p>\n\n<p>use_nodata : bool, optional\n    If True, the output raster will have a nodata value. Default: True</p>\n\n<p>nodata_value : int or float, optional\n    The nodata value of the output raster. Default: -9999.0</p>\n\n<p>speckle_filter : bool, optional\n    If True, a speckle filter will be applied. Default: False</p>\n\n<p>decibel : bool, optional\n    If True, the output raster will be in decibel. Default: False</p>\n\n<p>clean_tmp : bool, optional\n    If True, the temporary files will be deleted after processing. Default: False</p>\n\n<p>gpt_path : str, optional\n    Path to the GPT executable. Default: \"~/snap/bin/gpt\"</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>List[str]\n    A list with the paths to the output rasters.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">zip_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tmp_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">extent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">epsg</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_nodata</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">9999.0</span>,</span><span class=\"param\">\t<span class=\"n\">speckle_filter</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">decibel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">clean_tmp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">gpt_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;~/snap/bin/gpt&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s1_utils", "modulename": "buteo.eo.s1_utils", "kind": "module", "doc": "<h3 id=\"sentinel-1-utility-functions\">Sentinel 1 Utility functions.</h3>\n\n<h6 id=\"todo\">TODO:</h6>\n\n<blockquote>\n  <ul>\n  <li>Improve documentation</li>\n  </ul>\n</blockquote>\n"}, {"fullname": "buteo.eo.s1_utils.s1_get_metadata", "modulename": "buteo.eo.s1_utils", "qualname": "s1_get_metadata", "kind": "function", "doc": "<p>Get metadata from Sentinel 1 images.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>image_paths : List[str]\n    List of paths to Sentinel 1 images.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>List[Dict[str, Any]]\n    List of metadata dictionaries.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image_paths</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s1_utils.s1_to_db", "modulename": "buteo.eo.s1_utils", "qualname": "s1_to_db", "kind": "function", "doc": "<p>Convert intensity to dB\n10 * log10(arr)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s1_utils.s1_to_intensity", "modulename": "buteo.eo.s1_utils", "qualname": "s1_to_intensity", "kind": "function", "doc": "<p>Convert dB to intensity\n10^(arr/10)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices", "modulename": "buteo.eo.s2_indices", "kind": "module", "doc": "<h3 id=\"calculate-spectral-indices-for-sentinel-2-data\">Calculate spectral indices for Sentinel 2 data.</h3>\n\n<h6 id=\"todo\">TODO:</h6>\n\n<blockquote>\n  <p>Convert to numpy functions.\n  Handle resampling</p>\n</blockquote>\n"}, {"fullname": "buteo.eo.s2_indices.s2_index_chlre", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_chlre", "kind": "function", "doc": "<p>Red Edge Chlorophyll Index\nCalc: B05 / B08</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_05</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_rendvi", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_rendvi", "kind": "function", "doc": "<p>Red Edge NDVI\nCalc: (B08 - B06) / (B08 + B06)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_06</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_s2_rep", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_s2_rep", "kind": "function", "doc": "<p>Sentinel 2 Red Edge Position\nCalc: 705 + 35 * ((((B07 + B04) / 2) - B05) / (B06 - B05))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">b_07</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_05</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_06</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_ireci", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_ireci", "kind": "function", "doc": "<p>Red Edge Chlorophyll Index\nCalc: (B07 - B04) * B06 / B05</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">b_07</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_05</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_06</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_mcari", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_mcari", "kind": "function", "doc": "<p>Modified Chlorophyll Absorption in Reflectance Index\nCalc: (B05 - B04) - 0.2 * (B05 - B03) * (B05 / B04)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_05</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_03</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_arvi", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_arvi", "kind": "function", "doc": "<p>Atmospherically Resistant Vegetation Index\nCalc: (B08 - b) / (B08 + b), b = 2 * B04 - B02</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_02</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_savi", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_savi", "kind": "function", "doc": "<p>Soil Adjusted Vegetation Index\nCalc: ((B08 - B04) / ((B08 + B04) + 0.428)) * 1.856</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_msavi2", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_msavi2", "kind": "function", "doc": "<p>Modified Soil Adjusted Vegetation Index v2\nCalc: (2 * B08 + 1 - sqrt((2 * B08 + 1) ** 2) - 8 * (B08 - B04)) / 2</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_gndvi", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_gndvi", "kind": "function", "doc": "<p>Green Normalized Difference Vegetation Index\nCalc: (B08 - B03) / (B08 + B03)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_03</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_ndvi", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_ndvi", "kind": "function", "doc": "<p>Normalized Difference Vegetation Index\nCalc: (B08 - B04) / (B08 + B04)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_moist", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_moist", "kind": "function", "doc": "<p>Soil Moisture Index\nCalc: (B8A - B11) / (B8A + B11)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_8A</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_11</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_ndwi", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_ndwi", "kind": "function", "doc": "<p>Normalized Difference Water Index\nCalc: (B08 - B11) / (B08 + B11)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_11</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_ndwi_v2", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_ndwi_v2", "kind": "function", "doc": "<p>Normalized Difference Water Index v2\nCalc: (B03 - B08) / (B03 + B08)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_03</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_nbr", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_nbr", "kind": "function", "doc": "<p>Normalized Burn Ratio\nCalc: (B08 - B12) / (B08 + B12)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_12</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_nvei", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_nvei", "kind": "function", "doc": "<p>Non-elimination vegetation index\nCalc: (B02 - B04) / (B08 + B04)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_02</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_nbai", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_nbai", "kind": "function", "doc": "<p>Built-up area index\nCalc: (B12 - d) / (B12 + d), d = B08 / B02</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_02</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_12</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_brba", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_brba", "kind": "function", "doc": "<p>Band ratio for built-up areas\nCalc: (B03 / B08)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_03</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_ndbi", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_ndbi", "kind": "function", "doc": "<p>Normalised difference built-up index\nCalc: (B11 - B08) / (B11 + B08)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">b_11</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_blfei", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_blfei", "kind": "function", "doc": "<p>Built-up features extraction\nCalc: (bix - B11) / (bix + B11), bix = (B03 + B04 + B12) / 3</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">b_03</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_11</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_12</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_indices.s2_index_ibi", "modulename": "buteo.eo.s2_indices", "qualname": "s2_index_ibi", "kind": "function", "doc": "<p>Built-up features extraction\nCalc: (ndbi - ((savi + ndwi2) / 2)) / (ndbi + ((savi + ndwi2) / 2))\n    savi = ((B08 - B04) / ((B08 + B04) + 0.428)) * 1.856\n    ndwi2 = (B03 - B08) / (B03 + B08)\n    ndbi = (B11 - B08) / (B11 + B08</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">b_03</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_04</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_08</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_11</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_utils", "modulename": "buteo.eo.s2_utils", "kind": "module", "doc": "<h3 id=\"utility-functions-for-working-with-sentinel-2-data\">Utility functions for working with Sentinel 2 data.</h3>\n"}, {"fullname": "buteo.eo.s2_utils.s2_l2a_get_bands", "modulename": "buteo.eo.s2_utils", "qualname": "s2_l2a_get_bands", "kind": "function", "doc": "<p>Get the bands from a sentinel 2 L2A product.</p>\n\n<p>Parameters</p>\n\n<hr />\n\n<p>zip_or_safe_folder : str\nPath to the zip file or SAFE folder.</p>\n\n<p>zipfile : bool, optional\nIf True, the zip file is used. If False, the SAFE folder is used. Default: True.</p>\n\n<p>Returns</p>\n\n<hr />\n\n<p>dict\nDictionary with the paths to the bands.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zip_or_safe_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">zipfile</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.s2_utils.s2_l2a_get_metadata", "modulename": "buteo.eo.s2_utils", "qualname": "s2_l2a_get_metadata", "kind": "function", "doc": "<p>Get metadata from the SAFE folder or the zip file.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>zip_or_safe_folder : str\n    Path to the zip file or the SAFE folder.</p>\n\n<p>zipfile : bool, optional\n    If True, the zip file is used. If False, the SAFE folder is used. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dict\n    Dictionary with the metadata.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zip_or_safe_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">zipfile</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles", "modulename": "buteo.eo.xyz_tiles", "kind": "module", "doc": "<h3 id=\"module-for-creating-xyz-tiles\">Module for creating xyz tiles.</h3>\n"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator", "kind": "class", "doc": "<p>TMS Global Mercator Profile</p>\n"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.__init__", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.__init__", "kind": "function", "doc": "<p>Initialize the TMS Global Mercator pyramid</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tileSize</span><span class=\"o\">=</span><span class=\"mi\">256</span></span>)</span>"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.LatLonToMeters", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.LatLonToMeters", "kind": "function", "doc": "<p>Converts given lat/lon in WGS84 Datum to XY in Spherical Mercator EPSG:900913</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lat</span>, </span><span class=\"param\"><span class=\"n\">lon</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.MetersToLatLon", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.MetersToLatLon", "kind": "function", "doc": "<p>Converts XY point from Spherical Mercator EPSG:900913 to lat/lon in WGS84 Datum</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mx</span>, </span><span class=\"param\"><span class=\"n\">my</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.PixelsToMeters", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.PixelsToMeters", "kind": "function", "doc": "<p>Converts pixel coordinates in given zoom level of pyramid to EPSG:900913</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">px</span>, </span><span class=\"param\"><span class=\"n\">py</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.MetersToPixels", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.MetersToPixels", "kind": "function", "doc": "<p>Converts EPSG:900913 to pyramid pixel coordinates in given zoom level</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mx</span>, </span><span class=\"param\"><span class=\"n\">my</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.PixelsToTile", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.PixelsToTile", "kind": "function", "doc": "<p>Returns a tile covering region in given pixel coordinates</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">px</span>, </span><span class=\"param\"><span class=\"n\">py</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.PixelsToRaster", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.PixelsToRaster", "kind": "function", "doc": "<p>Move the origin of pixel coordinates to top-left corner</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">px</span>, </span><span class=\"param\"><span class=\"n\">py</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.MetersToTile", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.MetersToTile", "kind": "function", "doc": "<p>Returns tile for given mercator coordinates</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mx</span>, </span><span class=\"param\"><span class=\"n\">my</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.TileBounds", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.TileBounds", "kind": "function", "doc": "<p>Returns bounds of the given tile in EPSG:900913 coordinates</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tx</span>, </span><span class=\"param\"><span class=\"n\">ty</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.TileLatLonBounds", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.TileLatLonBounds", "kind": "function", "doc": "<p>Returns bounds of the given tile in latutude/longitude using WGS84 datum</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tx</span>, </span><span class=\"param\"><span class=\"n\">ty</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.Resolution", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.Resolution", "kind": "function", "doc": "<p>Resolution (meters/pixel) for given zoom level (measured at Equator)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.ZoomForPixelSize", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.ZoomForPixelSize", "kind": "function", "doc": "<p>Maximal scaledown zoom of the pyramid closest to the pixelSize.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pixelSize</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.GoogleTile", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.GoogleTile", "kind": "function", "doc": "<p>Converts TMS tile coordinates to Google Tile coordinates</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tx</span>, </span><span class=\"param\"><span class=\"n\">ty</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.GoogleToTMSTile", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.GoogleToTMSTile", "kind": "function", "doc": "<p>Converts Google Tile coordinates to TMS tile coordinates</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tx</span>, </span><span class=\"param\"><span class=\"n\">ty</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalMercator.QuadTree", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalMercator.QuadTree", "kind": "function", "doc": "<p>Converts TMS tile coordinates to Microsoft QuadTree</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tx</span>, </span><span class=\"param\"><span class=\"n\">ty</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalGeodetic", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalGeodetic", "kind": "class", "doc": "<p>TMS Global Geodetic Profile</p>\n"}, {"fullname": "buteo.eo.xyz_tiles.GlobalGeodetic.__init__", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalGeodetic.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tileSize</span><span class=\"o\">=</span><span class=\"mi\">256</span></span>)</span>"}, {"fullname": "buteo.eo.xyz_tiles.GlobalGeodetic.LatLonToPixels", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalGeodetic.LatLonToPixels", "kind": "function", "doc": "<p>Converts lat/lon to pixel coordinates in given zoom of the EPSG:4326 pyramid</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lat</span>, </span><span class=\"param\"><span class=\"n\">lon</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalGeodetic.PixelsToTile", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalGeodetic.PixelsToTile", "kind": "function", "doc": "<p>Returns coordinates of the tile covering region in pixel coordinates</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">px</span>, </span><span class=\"param\"><span class=\"n\">py</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalGeodetic.Resolution", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalGeodetic.Resolution", "kind": "function", "doc": "<p>Resolution (arc/pixel) for given zoom level (measured at Equator)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.eo.xyz_tiles.GlobalGeodetic.TileBounds", "modulename": "buteo.eo.xyz_tiles", "qualname": "GlobalGeodetic.TileBounds", "kind": "function", "doc": "<p>Returns bounds of the given tile</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tx</span>, </span><span class=\"param\"><span class=\"n\">ty</span>, </span><span class=\"param\"><span class=\"n\">zoom</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster", "modulename": "buteo.raster", "kind": "module", "doc": "<h3 id=\"make-simple-work-of-raster-analysis\">Make simple work of raster analysis!</h3>\n"}, {"fullname": "buteo.raster.align", "modulename": "buteo.raster.align", "kind": "module", "doc": "<h3 id=\"align-rasters\">Align rasters.</h3>\n\n<p>Functions to align a series of rasters to a master or a reference.</p>\n"}, {"fullname": "buteo.raster.align.raster_align", "modulename": "buteo.raster.align", "qualname": "raster_align", "kind": "function", "doc": "<p>Aligns rasters either to a reference raster or to each other using one of three methods:\nreference, intersection, or union.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>rasters : Union[str, gdal.Dataset, List[Union[str, gdal.Dataset]]]\n    The rasters to align.</p>\n\n<p>out_path : List[str] or str, optional\n    The output path(s), default: None</p>\n\n<p>reference : Str or gdal.Dataset, optional\n    The reference raster to align to, default: None</p>\n\n<p>method : str, optional\n    The method to use, default: \"reference\" [reference, intersection, union]</p>\n\n<p>resample_alg : str, optional\n    The resampling algorithm to use, default: \"nearest\"</p>\n\n<p>overwrite : bool, optional\n    Whether to overwrite existing files, default: True</p>\n\n<p>creation_options : Optional[List[str]], optional\n    The creation options to use, default: None</p>\n\n<p>prefix : str, optional\n    The prefix to add to the output file name, default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to add to the output file name, default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Whether to add a uuid to the output file name, default: False</p>\n\n<p>add_timestamp : bool, optional\n    Whether to add a timestamp to the output file name, default: False</p>\n\n<p>ram : float, optional\n    The proportion of total ram to allow usage of, default: 0.8</p>\n\n<p>ram_min : int, optional\n    The minimum amount of RAM to use in MB, default: 100</p>\n\n<p>ram_max : int, optional\n    The maximum amount of RAM to use in MB, default: None</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>List[str]\n    The aligned rasters.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rasters</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;reference&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">target_nodata</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">resample_alg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;nearest&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ram</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">ram_min</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">ram_max</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.borders", "modulename": "buteo.raster.borders", "kind": "module", "doc": "<h3 id=\"handle-and-create-borders-on-rasters\">Handle and create borders on rasters.</h3>\n\n<p>Functions to add or remove borders from rasters.\nUseful for warped satellite images and for proximity searching.</p>\n"}, {"fullname": "buteo.raster.borders.raster_add_border", "modulename": "buteo.raster.borders", "qualname": "raster_add_border", "kind": "function", "doc": "<p>Add a border to a raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset, List[Union[str, gdal.Dataset]]]\n    The input raster.</p>\n\n<p>out_path : Optional[str], optional\n    The output path. If None, the output will be a memory raster.\n    Default: None</p>\n\n<p>border_size : int, optional\n    The size of the border. Default: 100</p>\n\n<p>border_size_unit : str, optional\n    The unit of the border size. Default: 'px'</p>\n\n<p>border_value : int, optional\n    The value of the border. Default: 0</p>\n\n<p>prefix : str, optional\n    The prefix to add to the output file name, default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to add to the output file name, default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Whether to add a uuid to the output file name, default: False</p>\n\n<p>add_timestamp : bool, optional\n    Whether to add a timestamp to the output file name, default: False</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten. Default: True</p>\n\n<p>creation_options : Optional[List[str]], optional\n    Creation options for the output raster. Default is None</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, gdal.Dataset]\n    The output raster with added borders.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">border_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">border_size_unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">border_value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.clip", "modulename": "buteo.raster.clip", "kind": "module", "doc": "<h3 id=\"clip-rasters\">Clip rasters.</h3>\n\n<p>Clips a raster using a vector geometry or the extents of a raster.</p>\n"}, {"fullname": "buteo.raster.clip.raster_clip", "modulename": "buteo.raster.clip", "qualname": "raster_clip", "kind": "function", "doc": "<p>Clips a raster(s) using a vector geometry or the extents of a raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str or gdal.Dataset or list of str/gdal.Dataset\n    The raster(s) to clip.</p>\n\n<p>clip_geom : str or ogr.DataSource, gdal.Dataset or ogr.Geometry\n    The geometry to use to clip the raster.</p>\n\n<p>out_path : str or list or None, optional\n    The path(s) to save the clipped raster to. If None, a memory raster is created. Default: None.</p>\n\n<p>resample_alg : str, optional\n    The resampling algorithm to use. Options include: nearest, bilinear, cubic, cubicspline, lanczos,\n    average, mode, max, min, median, q1, q3, sum, rms. Default: \"nearest\".</p>\n\n<p>crop_to_geom : bool, optional\n    If True, the output raster will be cropped to the extent of the clip geometry. Default: True.</p>\n\n<p>adjust_bbox : bool, optional\n    If True, the output raster will have its bbox adjusted to match the clip geometry. Default: False.</p>\n\n<p>all_touch : bool, optional\n    If true, all pixels touching the clipping geometry will be included. Default: False.</p>\n\n<p>to_extent : bool, optional\n    If True, the output raster will be cropped to the extent of the clip geometry. Default: False.</p>\n\n<p>prefix : str, optional\n    The prefix to use for the output raster. Default: \"\".</p>\n\n<p>suffix : str, optional\n    The suffix to use for the output raster. Default: \"\".</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it already exists. Default: True.</p>\n\n<p>creation_options : list or None, optional\n    A list of creation options to pass to gdal. Default: None.</p>\n\n<p>dst_nodata : int or float or None, optional\n    The nodata value to use for the output raster. Default: \"infer\".</p>\n\n<p>src_nodata : int or float or None, optional\n    The nodata value to use for the input raster. Default: \"infer\".</p>\n\n<p>layer_to_clip : int or str, optional\n    The layer ID or name in the vector to use for clipping. Default: 0.</p>\n\n<p>verbose : int, optional\n    The verbosity level. Default: 0.</p>\n\n<p>add_uuid : bool, optional\n    If True, a UUID will be added to the output raster. Default: False.</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output raster. Default: False.</p>\n\n<p>ram : float, optional\n    The proportion of total ram to allow usage of. Default: 0.8.</p>\n\n<p>ram_max: int, optional\n    The maximum amount of ram to use in MB. Default: None.</p>\n\n<p>ram_min: int, optional\n    The minimum amount of ram to use in MB. Default: 100.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str or list\n    A string or list of strings representing the path(s) to the clipped raster(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">clip_geom</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">Geometry</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">resample_alg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;nearest&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">crop_to_geom</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">adjust_bbox</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">all_touch</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">to_extent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">layer_to_clip</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">dst_nodata</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;infer&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">src_nodata</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;infer&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">ram</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">ram_max</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ram_min</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.coordinates", "modulename": "buteo.raster.coordinates", "kind": "module", "doc": "<h3 id=\"functions-to-turn-rasters-into-rasters-of-coordinates\">Functions to turn rasters into rasters of coordinates.</h3>\n"}, {"fullname": "buteo.raster.coordinates.raster_create_grid_with_coordinates", "modulename": "buteo.raster.coordinates", "qualname": "raster_create_grid_with_coordinates", "kind": "function", "doc": "<p>Create a grid of coordinates from a raster. Format is (x, y, xy).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str or gdal.Dataset\n    The raster to create the grid from.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A NumPy array of shape (x, y, xy-coordinates).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">latlng</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_offsets", "modulename": "buteo.raster.core_offsets", "kind": "module", "doc": "<h3 id=\"create-offsets-to-read-rasters-in-chunks\">Create offsets to read rasters in chunks.</h3>\n"}, {"fullname": "buteo.raster.core_raster", "modulename": "buteo.raster.core_raster", "kind": "module", "doc": "<h3 id=\"basic-functionality-for-working-with-rasters\">. Basic functionality for working with rasters.</h3>\n"}, {"fullname": "buteo.raster.core_raster.check_rasters_have_same_nodata", "modulename": "buteo.raster.core_raster", "qualname": "check_rasters_have_same_nodata", "kind": "function", "doc": "<p>Verifies whether a list of rasters have the same nodata values.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>rasters : list\n    A list of rasters, either in gdal.Dataset or a string referring to the dataset.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if all rasters have the same nodata value, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rasters</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster.check_rasters_intersect", "modulename": "buteo.raster.core_raster", "qualname": "check_rasters_intersect", "kind": "function", "doc": "<p>Checks if two rasters intersect using their latlong boundaries.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster1 : str or gdal.Dataset\n    The first raster.</p>\n\n<p>raster2 : str or gdal.Dataset\n    The second raster.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if the rasters intersect, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster1</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">raster2</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster.get_raster_intersection", "modulename": "buteo.raster.core_raster", "qualname": "get_raster_intersection", "kind": "function", "doc": "<p>Gets the latlng intersection of two rasters.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster1 : str or gdal.Dataset\n    The first raster.</p>\n\n<p>raster2 : str or gdal.Dataset\n    The second raster.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>tuple or ogr.Geometry\n    If return_as_vector is False, returns a tuple <code>(xmin, ymin, xmax, ymax)</code> representing\n    the intersection of the two rasters. If return_as_vector is True, returns an ogr.Geometry\n    object representing the intersection.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster1</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">raster2</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">Geometry</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster.get_raster_overlap_fraction", "modulename": "buteo.raster.core_raster", "qualname": "get_raster_overlap_fraction", "kind": "function", "doc": "<p>Get the fraction of the overlap between two rasters.\n(e.g. 0.9 for mostly overlapping rasters)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster1 : str or gdal.Dataset\n    The first raster (master).</p>\n\n<p>raster2 : str or gdal.Dataset\n    The second raster.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>float\n    A value between 0.0 and 1.0 representing the degree of overlap between the two rasters.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster1</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">raster2</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster.check_rasters_are_aligned", "modulename": "buteo.raster.core_raster", "qualname": "check_rasters_are_aligned", "kind": "function", "doc": "<p>Verifies whether a list of rasters are aligned.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>rasters : list\n    A list of rasters, either in gdal.Dataset or a string referring to the dataset.</p>\n\n<p>same_dtype : bool, optional\n    If True, all the rasters should have the same data type. Default: False.</p>\n\n<p>same_nodata : bool, optional\n    If True, all the rasters should have the same nodata value. Default: False.</p>\n\n<p>threshold : float, optional\n    The threshold for the difference between the rasters. Default: 0.0001.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if rasters are aligned and optional parameters are True, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rasters</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">same_dtype</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">same_nodata</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">same_bands</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0001</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster.raster_to_extent", "modulename": "buteo.raster.core_raster", "qualname": "raster_to_extent", "kind": "function", "doc": "<p>Converts a raster to a vector file with the extent as a polygon.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str or gdal.Dataset\n    The raster to convert.</p>\n\n<p>out_path : str, optional\n    The path to save the extent to. If None, the extent is saved in memory. Default: None.</p>\n\n<p>latlng : bool, optional\n    If True, the extent is returned in latlng coordinates. If false,\n    the projection of the raster is used. Default: False.</p>\n\n<p>overwrite : bool, optional\n    If True, the output file is overwritten if it exists. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The path to the extent.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">latlng</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster.raster_open", "modulename": "buteo.raster.core_raster", "qualname": "raster_open", "kind": "function", "doc": "<p>Opens a raster in read or write mode.\nSupports lists.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset, List[Union[str, gdal.Dataset]]]\n    A path to a raster or a GDAL dataframe.</p>\n\n<p>writeable : bool, optional\n    If True, the raster is opened in write mode. Default: True.</p>\n\n<p>default_projection : int, optional\n    The default projection to use if the raster has no projection. Default: 4326.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[gdal.Dataset, List[gdal.Dataset]]\n    A gdal.Dataset or a list of gdal.Datasets.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">writeable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">default_projection</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4326</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster_io", "modulename": "buteo.raster.core_raster_io", "kind": "module", "doc": "<h3 id=\"basic-io-functions-for-working-with-rasters\">Basic IO functions for working with Rasters.</h3>\n"}, {"fullname": "buteo.raster.core_raster_io.raster_to_array", "modulename": "buteo.raster.core_raster_io", "qualname": "raster_to_array", "kind": "function", "doc": "<p>Converts a raster or a list of rasters into a NumPy array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : gdal.Dataset or str or list\n    Raster(s) to convert. The rasters must be aligned.</p>\n\n<p>bands : list or str or int, optional\n    Bands from the raster to convert to a numpy array. Can be \"all\", an int,\n    or a list of integers, or a single integer. Please note that bands are 1-indexed.\n    Default: \"all\".</p>\n\n<p>filled : bool, optional\n    If True, nodata values in the array will be filled with the specified fill_value.\n    If False, a masked array will be created with nodata values masked. Default: False.</p>\n\n<p>fill_value : int or float, optional\n    Value to fill the array with if filled is True. If None, the nodata value\n    of the raster is used. Default: None.</p>\n\n<p>bbox : list, optional\n    A list of <code>[xmin, xmax, ymin, ymax]</code> to use as the extent of the raster.\n    Uses coordinates and the OGR format. Default: None.</p>\n\n<p>bbox_srs : str or osr.SpatialReference, optional\n    The spatial reference of the bounding box. If None, the spatial reference\n    of the raster is used. Default: None.</p>\n\n<p>pixel_offsets : list or tuple, optional\n    A list of <code>[x_offset, y_offset, x_size, y_size]</code> to use as the extent of the\n    raster. Uses pixel offsets and the OGR format. Default: None.</p>\n\n<p>cast : str or dtype, optional\n    A type to cast the array to. If None, the array is not cast. It is only cast\n    if the array is not already the dtype. Default: None.</p>\n\n<p>channel_last : bool, optional\n    If True, the output array will have shape (height, width, channels).\n    If False, the output array will have shape (channels, height, width).\n    Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>np.ndarray\n    A numpy array representing the raster data.</p>\n\n<h2 id=\"raises\">Raises</h2>\n\n<p>ValueError\n    If the raster is not a valid raster.\nValueError\n    If the bands are not valid.\nValueError\n    If the masked parameter is not valid.\nValueError\n    If both bbox and pixel_offsets are provided.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p><code>Example 1: Convert a raster to a numpy array.</code></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">buteo</span> <span class=\"k\">as</span> <span class=\"nn\">beo</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">raster</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/path/to/raster/raster.tif&quot;</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Convert a raster to a numpy array</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">raster_to_array</span><span class=\"p\">(</span><span class=\"n\">raster</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">dtype</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"p\">(</span><span class=\"s1\">&#39;uint8&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><code>Example 2: Convert a raster to a numpy array with a specific band.</code></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">buteo</span> <span class=\"k\">as</span> <span class=\"nn\">beo</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">raster</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/path/to/raster/raster.tif&quot;</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Convert a raster to a numpy array</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">raster_to_array</span><span class=\"p\">(</span><span class=\"n\">raster</span><span class=\"p\">,</span> <span class=\"n\">bands</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">dtype</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"p\">(</span><span class=\"s1\">&#39;uint8&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><code>Example 3: Convert a list of rasters to a numpy array with a specific</code></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># band and a specific type and filled.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">glob</span> <span class=\"kn\">import</span> <span class=\"n\">glob</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">buteo</span> <span class=\"k\">as</span> <span class=\"nn\">beo</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">FOLDER</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/path/to/folder&quot;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rasters</span> <span class=\"o\">=</span> <span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">FOLDER</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/*.tif&quot;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rasters</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">10</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Convert rasters to a numpy array</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">raster_to_array</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">rasters</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">bands</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>     <span class=\"n\">cast</span><span class=\"o\">=</span><span class=\"s2\">&quot;float32&quot;</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">filled</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">fill_value</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># This raises an error if the 10 rasters are not aligned.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">dtype</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"p\">(</span><span class=\"s1\">&#39;float32&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">bands</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;all&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">filled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_offsets</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bbox</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bbox_srs</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cast</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster_io.array_to_raster", "modulename": "buteo.raster.core_raster_io", "qualname": "array_to_raster", "kind": "function", "doc": "<p>Turns a NumPy array into a GDAL dataset or exported as a raster using a reference raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>array : np.ndarray\n    The numpy array to convert.</p>\n\n<p>reference : str or gdal.Dataset\n    The reference raster to use for the output.</p>\n\n<p>out_path : path, optional\n    The destination to save to. Default: None.</p>\n\n<p>set_nodata : str, float, int, or bool. Optional\n    Can be set to:\n        - \"arr\": The nodata value will be the same as the NumPy array.\n        - \"ref\": The nodata value will be the same as the reference raster.\n        - value: The nodata value will be the value provided. Default: \"arr\".\n        - None/False: The nodata value will not be set.</p>\n\n<p>allow_mismatches : bool, optional\n    If True, the array can have a different shape than the reference raster.\n    Default: False.</p>\n\n<p>pixel_offsets : list or tuple, optional\n    If provided, the array will be written to the reference raster at the\n    specified pixel offsets. The list should be in the format [x_offset, y_offset, x_size, y_size].\n    Default: None.</p>\n\n<p>bbox : list, optional\n    If provided, the array will be written to the reference raster at the specified\n    bounding box. The list should be in the format [min_x, min_y, max_x, max_y]. Default: None.</p>\n\n<p>bbox_srs : str or osr.SpatialReference, optional\n    The spatial reference of the bounding box. If None, the spatial reference\n    of the raster is used. Default: None.</p>\n\n<p>channel_last : bool, optional\n    If True, the array is in the channel-last format. If False, the array is in the\n    channel-first format. Default: True.</p>\n\n<p>overwrite : bool, optional\n    If the file exists, should it be overwritten? Default: True.</p>\n\n<p>creation_options : list, optional\n    List of GDAL creation options. Default: [\"TILED=YES\", \"NUM_THREADS=ALL_CPUS\",\n    \"BIGTIFF=YES\", \"COMPRESS=LZW\"].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The file path to the newly created raster(s).</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Create a raster from a numpy array.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">buteo</span> <span class=\"k\">as</span> <span class=\"nn\">beo</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">raster</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/path/to/raster/raster.tif&quot;</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">raster_to_array</span><span class=\"p\">(</span><span class=\"n\">raster</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"n\">array</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">out_path</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">array_to_raster</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">array</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">reference</span><span class=\"o\">=</span><span class=\"n\">raster</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;/path/to/new/new_raster.tif&quot;</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">out_path</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s2\">&quot;/path/to/new/new_raster.tif&quot;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">set_nodata</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;arr&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">allow_mismatches</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_offsets</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bbox</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bbox_srs</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster_io.save_dataset_to_disk", "modulename": "buteo.raster.core_raster_io", "qualname": "save_dataset_to_disk", "kind": "function", "doc": "<p>Writes a dataset to disk. Can be a raster or a vector.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : Union[gdal.Dataset, ogr.DataSource, str]\n    The dataset to write to disk.</p>\n\n<p>out_path : Union[str, List[str]]\n    The output path or list of output paths.</p>\n\n<p>prefix : str, optional\n    A prefix to add to the output path. Default: \"\".</p>\n\n<p>suffix : str, optional\n    A suffix to add to the output path. Default: \"\".</p>\n\n<p>add_uuid : bool, optional\n    If True, a UUID will be added to the output path. Default: False.</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output path. Default: False.</p>\n\n<p>overwrite : bool, optional\n    If True, the output will be overwritten if it already exists. Default: True.</p>\n\n<p>creation_options : Optional[List[str]], optional\n    A list of creation options. Default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The output path or list of output paths.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster_io.raster_to_array_chunks", "modulename": "buteo.raster.core_raster_io", "qualname": "raster_to_array_chunks", "kind": "class", "doc": "<p>A class for reading raster data in chunks. The array will be split into x and y\namount of chunks in the x and y directions. The output will be the read array\nand the offsets of the chunk in the raster. The offset can be used to reconstitute\nthe array into the original raster or a new raster representing the chunk,\nusing the <code>array_to_raster()</code> function.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[gdal.Dataset, str, List[Union[str, gdal.Dataset]]]\n    The raster to read.</p>\n\n<p>chunks : int\n    The number of chunks to read. The area is chunked in way that ensures\n    that the chunks are as square as possible. Default: 1.</p>\n\n<p>chunk_size : list or tuple, optional\n    The raster can be split into chunks of a fixed size,\n    instead of splitting into a fixed number of chunks.</p>\n\n<pre><code>The list should be in the format [x_size, y_size].\nIf this is provided, the chunks parameter is ignored. Default: None.\n</code></pre>\n\n<p>overlap : int, optional\n    The number of pixels to overlap. Default: 0.</p>\n\n<p>bands : list or str or int, optional\n    The bands to read. Can be \"all\", an int, or a list of integers, or a single\n    integer. Please note that bands are 1-indexed. Default: \"all\".</p>\n\n<p>filled : bool, optional\n    Whether to fill masked values. Default: False.</p>\n\n<p>fill_value : int or float, optional\n    The value to fill masked values with. Default: None.</p>\n\n<p>skip : int, optional\n    The number of chunks to skip when iterating. Default: 0.</p>\n\n<p>border_strategy : int, optional\n    The border strategy to use when splitting the raster into chunks.\n    border_strategy ignored when chunk_size and overlaps are provided.\n    Only applied when chunk_size is provided. Can be 1 or 2. Default: 1.\n    1. Ignore the border chunks if they do not fit the chunk size.\n    2. Oversample the border chunks to fit the chunk size.\n    3. Shrink the last chunk to fit the image size. (Creates uneven chunks.)</p>\n\n<p>cast : type or str, optional\n    The data type to cast the output to. Default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>generator\n    A generator that yields the raster data in chunks and the offsets of the chunk\n    in the raster in a tuple.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Read a raster into array via chunks.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">buteo</span> <span class=\"k\">as</span> <span class=\"nn\">beo</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">raster</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/path/to/raster/raster.tif&quot;</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">raster_to_metadata</span><span class=\"p\">(</span><span class=\"n\">raster</span><span class=\"p\">)[</span><span class=\"s2\">&quot;shape&quot;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">shape</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">chunk</span><span class=\"p\">,</span> <span class=\"n\">offsets</span> <span class=\"ow\">in</span> <span class=\"n\">beo</span><span class=\"o\">.</span><span class=\"n\">raster_to_array_chunks</span><span class=\"p\">(</span><span class=\"n\">raster</span><span class=\"p\">,</span> <span class=\"n\">chunks</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">chunk</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">offsets</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"p\">(</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, {"fullname": "buteo.raster.core_raster_io.raster_to_array_chunks.__init__", "modulename": "buteo.raster.core_raster_io", "qualname": "raster_to_array_chunks.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">chunks</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_size</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">bands</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;all&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">filled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">skip</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">border_strategy</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">cast</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "buteo.raster.core_raster_io.raster_create_empty", "modulename": "buteo.raster.core_raster_io", "qualname": "raster_create_empty", "kind": "function", "doc": "<p>Create an empty raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>out_path : str, optional\n    The output path. If None, a temporary file will be created.</p>\n\n<p>width : int, optional\n    The width of the raster in pixels. Default: 100.</p>\n\n<p>height : int, optional\n    The height of the raster in pixels. Default: 100.</p>\n\n<p>pixel_size : int or float or list or tuple, optional\n    The pixel size in units of the projection. Default: 10.0.</p>\n\n<p>bands : int, optional\n    The number of bands in the raster. Default: 1.</p>\n\n<p>dtype : str, int, np.dtype, optional\n    The data type of the raster. Default: \"uint8\".</p>\n\n<p>x_min : int or float, optional\n    The x coordinate of the top left corner of the raster. Default: 0.0.</p>\n\n<p>y_max : int or float, optional\n    The y coordinate of the top left corner of the raster. Default: 0.0.</p>\n\n<p>nodata_value : int or float or None, optional\n    The nodata value of the raster. Default: None.</p>\n\n<p>fill_value : int or float or None, optional\n    The fill value of the raster. Default: 0.0.</p>\n\n<p>projection : int or str or gdal.Dataset or ogr.DataSource or osr.SpatialReference, optional\n    The projection of the raster. Default: \"EPSG:3857\".</p>\n\n<p>creation_options : list or None, optional\n    A list of creation options. Default: None.</p>\n\n<p>overwrite : bool, optional\n    If True, overwrite the output file if it exists. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The path to the output raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_size</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"mf\">10.0</span>,</span><span class=\"param\">\t<span class=\"n\">bands</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uint8&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">x_min</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">y_max</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;EPSG:3857&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster_io.raster_create_from_array", "modulename": "buteo.raster.core_raster_io", "qualname": "raster_create_from_array", "kind": "function", "doc": "<p>Create a raster from a numpy array.</p>\n\n<p>Parameters</p>\n\n<hr />\n\n<p>arr : np.ndarray\nThe array to convert to a raster.</p>\n\n<p>out_path : str, optional\nThe output path. If None, a temporary file will be created.</p>\n\n<p>pixel_size : int or float or list or tuple, optional\nThe pixel size of the output raster. Default: 10.0.</p>\n\n<p>x_min : int or float, optional\nThe x coordinate of the top left corner of the output raster. Default: 0.0.</p>\n\n<p>y_max : int or float, optional\nThe y coordinate of the top left corner of the output raster. Default: 0.0.</p>\n\n<p>projection : int or str or gdal.Dataset or ogr.DataSource or osr.SpatialReference, optional\nThe projection of the output raster. Default: \"EPSG:3857\".</p>\n\n<p>creation_options : list or None, optional\nThe creation options for the output raster. Default: None.</p>\n\n<p>overwrite : bool, optional\nIf True, the output raster will be overwritten if it already exists. Default: True.</p>\n\n<p>Returns</p>\n\n<hr />\n\n<p>str\nThe path to the output raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_size</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">x_min</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">y_max</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;EPSG:3857&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">channel_last</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster_io.raster_create_copy", "modulename": "buteo.raster.core_raster_io", "qualname": "raster_create_copy", "kind": "function", "doc": "<p>Create a copy of a raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str or gdal.Dataset\n    The raster to copy.</p>\n\n<p>out_path : str, optional\n    The output path. If None, a temporary file will be created.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The path to the output raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster_io.raster_set_band_descriptions", "modulename": "buteo.raster.core_raster_io", "qualname": "raster_set_band_descriptions", "kind": "function", "doc": "<p>Update the band descriptions of a raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str\n    The raster to update.</p>\n\n<p>bands : list\n    The bands to update. e.g. [1, 2, 3] for rgb. Starts at 1.</p>\n\n<p>descriptions : list\n    The descriptions to set. e.g. [\"Red\", \"Green\", \"Blue\"].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The path to the updated raster. (Same as input)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">raster</span>, </span><span class=\"param\"><span class=\"n\">bands</span>, </span><span class=\"param\"><span class=\"n\">descriptions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_raster_io.raster_extract_bands", "modulename": "buteo.raster.core_raster_io", "qualname": "raster_extract_bands", "kind": "function", "doc": "<p>Extract a band from a raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str or gdal.Dataset\n    The raster to extract the band from.</p>\n\n<p>band : int or list\n    The band to extract. Can be a single band or a list of bands.</p>\n\n<p>out_path : str, optional\n    The output path. If None, a temporary file will be created.</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it exists. Default: True.</p>\n\n<p>creation_options : list or None, optional\n    The creation options for the output raster. Default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The path to the output raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">band</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_stack", "modulename": "buteo.raster.core_stack", "kind": "module", "doc": "<h3 id=\"functions-for-changing-the-datatype-of-a-raster\">Functions for changing the datatype of a raster.</h3>\n"}, {"fullname": "buteo.raster.core_stack.raster_stack_list", "modulename": "buteo.raster.core_stack", "qualname": "raster_stack_list", "kind": "function", "doc": "<p>Stacks a list of aligned rasters into a single raster file.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>rasters : list\n    List of rasters to stack. These rasters must be aligned.</p>\n\n<p>out_path : str or None, optional\n    The destination to save the output raster. If not provided, a temporary file will be created. Default: None.</p>\n\n<p>overwrite : bool, optional\n    If the file exists, should it be overwritten? Default: True.</p>\n\n<p>dtype : str, optional\n    The data type of the output raster. If not provided, the data type of the input rasters will be used. Default: None.</p>\n\n<p>creation_options : list, optional\n    A list of GDAL creation options for the output raster. Default is\n    [\"TILED=YES\", \"NUM_THREADS=ALL_CPUS\", \"BIGTIFF=YES\", \"COMPRESS=LZW\"].</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str or list\n    The file path(s) to the newly created raster(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rasters</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.core_stack.raster_stack_vrt_list", "modulename": "buteo.raster.core_stack", "qualname": "raster_stack_vrt_list", "kind": "function", "doc": "<p>Create a virtual raster (.vrt) by stacking a list of input rasters.</p>\n\n<p>The function accepts a list of rasters and creates a virtual raster stack\nby combining them. The rasters can be stacked by keeping their bands separate,\nor by merging the bands in the order of the input rasters.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>rasters : List[Union[str, gdal.Dataset]]\n    A list of input rasters as either file paths or GDAL datasets to be stacked.</p>\n\n<p>out_path : Optional[str], default=None\n    The destination file path to save the output VRT raster. If not provided, a\n    temporary file path will be generated.</p>\n\n<p>separate : bool, default=True\n    If True, the raster bands will be kept separate and stacked in the order of\n    the input rasters. If False, the raster bands will be merged, but all input\n    rasters must have the same number of bands.</p>\n\n<p>resample_alg : str, default='nearest'\n    The resampling algorithm to use when building the VRT. Accepts any algorithm\n    supported by GDAL's BuildVRT function (e.g., 'nearest', 'bilinear', 'cubic').</p>\n\n<p>nodata_src : Optional[float], default=None\n    The NoData value to use for the source rasters. If not provided, the NoData\n    value from the input rasters will be used.</p>\n\n<p>nodata_VRT : Optional[float], default=None\n    The NoData value to use for the output VRT raster. If not provided, the NoData\n    value from the input rasters will be used.</p>\n\n<p>nodata_hide : Optional[bool], default=None\n    If True, the NoData value will be hidden in the VRT. If not provided, the value\n    will be determined by the input rasters.</p>\n\n<p>options : Optional[List], default=None\n    A list of VRT options for GDAL. If not provided, default options will be used.</p>\n\n<p>overwrite : bool, default=True\n    If True and the output file exists, it will be overwritten. If False and the\n    output file exists, an error will be raised.</p>\n\n<p>reference : Optional[str], default=None\n    A reference raster file path or GDAL dataset to use for aligning the stacked\n    rasters. If not provided, the alignment of the input rasters will be used.</p>\n\n<p>creation_options : Optional[List[str]], default=None\n    A list of GDAL creation options for the output VRT raster. If not provided,\n    the default options will be used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The file path to the newly created VRT raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rasters</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">separate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">resample_alg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;nearest&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_src</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_VRT</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_hide</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.coregister", "modulename": "buteo.raster.coregister", "kind": "module", "doc": "<h3 id=\"coregistering-images\">Coregistering images.</h3>\n"}, {"fullname": "buteo.raster.coregister.coregister_images_efolki", "modulename": "buteo.raster.coregister", "qualname": "coregister_images_efolki", "kind": "function", "doc": "<p>Coregister two images using the EFolki method. This method is based on the paper:</p>\n\n<p>\"GeFolki: A Generic and Efficient Method for Optical Image Registration\"</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>master : str\n    Path to the master image.</p>\n\n<p>slave : str\n    Path to the slave image.</p>\n\n<p>out_path : str\n    Path to the output file. If None, the output will be written to a temporary file.</p>\n\n<p>iteration : int\n    Number of iterations to run the algorithm.</p>\n\n<p>radius : list\n    List of two integers specifying the radius of the search window.</p>\n\n<p>rank : int\n    Rank of the algorithm.</p>\n\n<p>levels : int\n    Number of levels to run the algorithm.</p>\n\n<p>band_to_base_master : int\n    Band to use as the base for the coregistration.</p>\n\n<p>band_to_base_slave : int\n    Band to use as the base for the coregistration.</p>\n\n<p>mask : np.ndarray\n    Mask to apply to the coregistration.</p>\n\n<p>fill_value : int\n    Fill value to use for the master and slave images.</p>\n\n<p>resample_alg : str\n    The resampling algorithm, default: \"nearest\".</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out_path : str\n    Path to the output file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">master</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">slave</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">iteration</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">rank</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">levels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">band_to_base_master</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">band_to_base_slave</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">resample_alg</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.coregister.coregister_images_gefolki", "modulename": "buteo.raster.coregister", "qualname": "coregister_images_gefolki", "kind": "function", "doc": "<p>Coregister two images using the GeFolki method. This method is based on the paper:</p>\n\n<p>\"GeFolki: A Generic and Efficient Method for Optical Image Registration\"</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>master : str\n    Path to the master image.</p>\n\n<p>slave : str\n    Path to the slave image.</p>\n\n<p>out_path : str\n    Path to the output file. If None, the output will be written to a temporary file.</p>\n\n<p>iteration : int\n    Number of iterations to run the algorithm.</p>\n\n<p>radius : list\n    List of two integers specifying the radius of the search window.</p>\n\n<p>rank : int\n    Rank of the algorithm.</p>\n\n<p>levels : int\n    Number of levels to run the algorithm.</p>\n\n<p>band_to_base_master : int\n    Band to use as the base for the coregistration.</p>\n\n<p>band_to_base_slave : int\n    Band to use as the base for the coregistration.</p>\n\n<p>mask : np.ndarray\n    Mask to apply to the coregistration.</p>\n\n<p>fill_value : int\n    Fill value to use for the master and slave images.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out_path : str\n    Path to the output file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">master</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">slave</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">iteration</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">rank</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">levels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">band_to_base_master</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">band_to_base_slave</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">resample_alg</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.datatype", "modulename": "buteo.raster.datatype", "kind": "module", "doc": "<h3 id=\"functions-for-changing-the-datatype-of-a-raster\">Functions for changing the datatype of a raster.</h3>\n"}, {"fullname": "buteo.raster.datatype.raster_set_datatype", "modulename": "buteo.raster.datatype", "qualname": "raster_set_datatype", "kind": "function", "doc": "<p>Converts the datatype of a raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str or gdal.Dataset or list\n    The input raster(s) for which the datatype will be changed.</p>\n\n<p>dtype : str\n    The target datatype for the output raster(s).</p>\n\n<p>out_path : path or list, optional\n    The output location for the processed raster(s). Default: None.</p>\n\n<p>creation_options : list, optional\n    A list of GDAL creation options for the output raster(s). Default is\n    [\"TILED=YES\", \"NUM_THREADS=ALL_CPUS\", \"BIGTIFF=YES\", \"COMPRESS=LZW\"].</p>\n\n<p>add_uuid : bool, optional\n    Determines whether to add a UUID to the output path. Default: False.</p>\n\n<p>add_timestamp : bool, optional\n    Determines whether to add a timestamp to the output path. Default: False.</p>\n\n<p>prefix : str, optional\n    A prefix to add to the output path. Default: \"\".</p>\n\n<p>suffix : str, optional\n    A suffix to add to the output path. Default: \"\".</p>\n\n<p>overwrite : bool, optional\n    Determines whether to overwrite existing files with the same name. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str or list\n    The file path(s) of the newly created raster(s) with the specified datatype.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.datatype.raster_get_datatype", "modulename": "buteo.raster.datatype", "qualname": "raster_get_datatype", "kind": "function", "doc": "<p>Gets the datatype of a raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str or gdal.Dataset or list\n    The input raster(s) for which the datatype will be changed.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str or list\n    The datatype of the input raster(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.dem", "modulename": "buteo.raster.dem", "kind": "module", "doc": "<h3 id=\"slope-aspect-hillshade-and-other-dem-functions\">Slope, aspect, hillshade, and other DEM functions.</h3>\n"}, {"fullname": "buteo.raster.dem.raster_dem_to_slope", "modulename": "buteo.raster.dem", "qualname": "raster_dem_to_slope", "kind": "function", "doc": "<p>Calculate the slope of a raster DEM.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, List, gdal.Dataset]\n    The raster(s) to be converted to slope.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output raster. If None, the raster is created in memory., default: None</p>\n\n<p>slope_format : str, optional\n    \"percent\" or \"degree\", by default \"percent\".</p>\n\n<p>z_factor : float, optional\n    Z factor for slope calculation, by default 1.0.</p>\n\n<p>creation_options : list, optional\n    A list of GDAL creation options for the output raster(s).</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it already exists., default: True</p>\n\n<p>prefix : str, optional\n    The prefix to be added to the output raster name., default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to be added to the output raster name., default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, a unique identifier will be added to the output raster name., default: False</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output raster name., default: False</p>\n\n<p>out_format : str, optional\n    The output format of the raster. If None, the format is inferred from the output path., default: \".tif\"</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the raster(s) with slope.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">slope_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;percent&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">z_factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">out_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tif&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.dem.raster_dem_to_aspect", "modulename": "buteo.raster.dem", "qualname": "raster_dem_to_aspect", "kind": "function", "doc": "<p>Calculate the aspect in degrees of a raster DEM.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, List, gdal.Dataset]\n    The raster(s) to be converted to aspect.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output raster. If None, the raster is created in memory., default: None</p>\n\n<p>zero_for_flat : bool, optional\n    If True, set aspect to 0 for flat areas, by default False.</p>\n\n<p>creation_options : list, optional\n    A list of GDAL creation options for the output raster(s).</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it already exists., default: True</p>\n\n<p>prefix : str, optional\n    The prefix to be added to the output raster name., default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to be added to the output raster name., default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, a unique identifier will be added to the output raster name., default: False</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output raster name., default: False</p>\n\n<p>out_format : str, optional\n    The output format of the raster. If None, the format is inferred from the output path., default: \".tif\"</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the raster(s) with slope.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">zero_for_flat</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">out_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tif&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.dem.raster_dem_to_hillshade", "modulename": "buteo.raster.dem", "qualname": "raster_dem_to_hillshade", "kind": "function", "doc": "<p>Calculate the hillshade of a raster DEM.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, List, gdal.Dataset]\n    The raster(s) to be converted to hillshade.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output raster. If None, the raster is created in memory., default: None</p>\n\n<p>z_factor : float, optional\n    Z factor for hillshade calculation, by default 1.0.</p>\n\n<p>creation_options : list, optional\n    A list of GDAL creation options for the output raster(s).</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it already exists., default: True</p>\n\n<p>prefix : str, optional\n    The prefix to be added to the output raster name., default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to be added to the output raster name., default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, a unique identifier will be added to the output raster name., default: False</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output raster name., default: False</p>\n\n<p>out_format : str, optional\n    The output format of the raster. If None, the format is inferred from the output path., default: \".tif\"</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the raster(s) with slope.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">z_factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">out_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tif&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.dem.raster_dem_to_orientation", "modulename": "buteo.raster.dem", "qualname": "raster_dem_to_orientation", "kind": "function", "doc": "<p>Calculate the orientation of a raster DEM.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, List, gdal.Dataset]\n    The raster(s) to be converted to orientation.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output raster. If None, the raster is created in memory., default: None</p>\n\n<p>include_height : bool, optional\n    If True, include height in orientation calculation, by default False.</p>\n\n<p>height_normalisation : bool, optional\n    If True, normalise height to 0-1, by default False.</p>\n\n<p>height_normalisation_value : float, optional\n    Value to normalise height to, by default 8849m. The height of mt. everest.</p>\n\n<p>creation_options : list, optional\n    A list of GDAL creation options for the output raster(s).</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it already exists., default: True</p>\n\n<p>prefix : str, optional\n    The prefix to be added to the output raster name., default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to be added to the output raster name., default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, a unique identifier will be added to the output raster name., default: False</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output raster name., default: False</p>\n\n<p>out_format : str, optional\n    The output format of the raster. If None, the format is inferred from the output path., default: \".tif\"</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the raster(s) with slope.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">include_height</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">height_normalisation</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">height_normalisation_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">8849.0</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">out_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tif&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.footprints", "modulename": "buteo.raster.footprints", "kind": "module", "doc": "<h3 id=\"extract-the-footprints-or-centroids-of-rasters\">Extract the footprints or centroids of rasters.</h3>\n"}, {"fullname": "buteo.raster.footprints.raster_get_footprints", "modulename": "buteo.raster.footprints", "qualname": "raster_get_footprints", "kind": "function", "doc": "<p>Gets the footprints of a raster or a list of rasters.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, List, gdal.Dataset]\n    The raster(s) to be shifted.</p>\n\n<p>latlng : bool, optional\n    If True, the footprints are returned in lat/lon coordinates. If False, the footprints are returned in projected coordinates., default: True</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output raster. If None, the raster is created in memory., default: None</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it already exists., default: True</p>\n\n<p>prefix : str, optional\n    The prefix to be added to the output raster name., default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to be added to the output raster name., default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, a unique identifier will be added to the output raster name., default: False</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output raster name., default: False</p>\n\n<p>out_format : str, optional\n    The output format of the raster. If None, the format is inferred from the output path., default: \"gpkg\"</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the shifted raster(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">latlng</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">out_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;gpkg&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki", "modulename": "buteo.raster.gefolki", "kind": "module", "doc": "<h3 id=\"gefolki-coregistration-algorithm\">Gefolki Coregistration Algorithm.</h3>\n"}, {"fullname": "buteo.raster.gefolki.equalize_adapthist", "modulename": "buteo.raster.gefolki", "qualname": "equalize_adapthist", "kind": "function", "doc": "<p>Contrast Limited Adaptive Histogram Equalization.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>image : array-like\n    Input image.\nntiles_x : int, optional\n    Number of tile regions in the X direction.  Ranges between 2 and 16.\nntiles_y : int, optional\n    Number of tile regions in the Y direction.  Ranges between 2 and 16.\nclip_limit : float: optional\n    Clipping limit, normalized between 0 and 1 (higher values give more\n    contrast).\nnbins : int, optional\n    Number of gray bins for histogram (\"dynamic range\").</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray\n    Equalized image.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<ul>\n<li>The algorithm relies on an image whose rows and columns are even\nmultiples of the number of tiles, so the extra rows and columns are left\nat their original values, thus  preserving the input image shape.</li>\n<li>For color images, the following steps are performed:\n<ul>\n<li>The image is converted to LAB color space</li>\n<li>The CLAHE algorithm is run on the L channel</li>\n<li>The image is converted back to RGB space and returned</li>\n</ul></li>\n<li>For RGBA images, the original alpha channel is removed.</li>\n</ul>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">image</span>,</span><span class=\"param\">\t<span class=\"n\">ntiles_x</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">ntiles_y</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">clip_limit</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">nbins</span><span class=\"o\">=</span><span class=\"mi\">256</span>,</span><span class=\"param\">\t<span class=\"n\">nr_of_grey</span><span class=\"o\">=</span><span class=\"mi\">16384</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.clip_histogram", "modulename": "buteo.raster.gefolki", "qualname": "clip_histogram", "kind": "function", "doc": "<p>Perform clipping of the histogram and redistribution of bins.</p>\n\n<p>The histogram is clipped and the number of excess pixels is counted.\nAfterwards the excess pixels are equally redistributed across the\nwhole histogram (providing the bin count is smaller than the cliplimit).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hist : ndarray\n    Histogram array.\nclip_limit : int\n    Maximum allowed bin count.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>hist : ndarray\n    Clipped histogram.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hist</span>, </span><span class=\"param\"><span class=\"n\">clip_limit</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.map_histogram", "modulename": "buteo.raster.gefolki", "qualname": "map_histogram", "kind": "function", "doc": "<p>Calculate the equalized lookup table (mapping).</p>\n\n<p>It does so by cumulating the input histogram.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>hist : ndarray\n    Clipped histogram.\nmin_val : int\n    Minimum value for mapping.\nmax_val : int\n    Maximum value for mapping.\nn_pixels : int\n    Number of pixels in the region.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray\n   Mapped intensity LUT.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hist</span>, </span><span class=\"param\"><span class=\"n\">min_val</span>, </span><span class=\"param\"><span class=\"n\">max_val</span>, </span><span class=\"param\"><span class=\"n\">n_pixels</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.interpolate", "modulename": "buteo.raster.gefolki", "qualname": "interpolate", "kind": "function", "doc": "<p>Find the new grayscale level for a region using bilinear interpolation.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>image : ndarray\n    Full image.\nxslice, yslice : array-like\n   Indices of the region.\nmap* : ndarray\n    Mappings of greylevels from histograms.\naLUT : ndarray\n    Maps grayscale levels in image to histogram levels.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray\n    Original image with the subregion replaced.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This function calculates the new greylevel assignments of pixels within\na submatrix of the image. This is done by a bilinear interpolation between\nfour different mappings in order to eliminate boundary artifacts.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">xslice</span>, </span><span class=\"param\"><span class=\"n\">yslice</span>, </span><span class=\"param\"><span class=\"n\">mapLU</span>, </span><span class=\"param\"><span class=\"n\">mapRU</span>, </span><span class=\"param\"><span class=\"n\">mapLB</span>, </span><span class=\"param\"><span class=\"n\">mapRB</span>, </span><span class=\"param\"><span class=\"n\">aLUT</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.conv2SepMatlabbis", "modulename": "buteo.raster.gefolki", "qualname": "conv2SepMatlabbis", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">fen</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.EFolkiIter", "modulename": "buteo.raster.gefolki", "qualname": "EFolkiIter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I0</span>, </span><span class=\"param\"><span class=\"n\">I1</span>, </span><span class=\"param\"><span class=\"n\">iteration</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">rank</span><span class=\"o\">=</span><span class=\"mi\">4</span>, </span><span class=\"param\"><span class=\"n\">uinit</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">vinit</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.resize", "modulename": "buteo.raster.gefolki", "qualname": "resize", "kind": "function", "doc": "<p>Resize image to match a certain shape.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>image : ndarray\n    Input image.\nshape : tuple\n    Shape of the output image.\norder : int, optional\n    The order of the spline interpolation, default is 1.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray\n    Resized image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">shape</span>, </span><span class=\"param\"><span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.GEFolkiIter", "modulename": "buteo.raster.gefolki", "qualname": "GEFolkiIter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I0</span>, </span><span class=\"param\"><span class=\"n\">I1</span>, </span><span class=\"param\"><span class=\"n\">iteration</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">rank</span><span class=\"o\">=</span><span class=\"mi\">4</span>, </span><span class=\"param\"><span class=\"n\">uinit</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">vinit</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.conv2", "modulename": "buteo.raster.gefolki", "qualname": "conv2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">w</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.interp2", "modulename": "buteo.raster.gefolki", "qualname": "interp2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">use_linear</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.conv2bis", "modulename": "buteo.raster.gefolki", "qualname": "conv2bis", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">w</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.conv2Sep", "modulename": "buteo.raster.gefolki", "qualname": "conv2Sep", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">w</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.BurtOF", "modulename": "buteo.raster.gefolki", "qualname": "BurtOF", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "buteo.raster.gefolki.BurtOF.__init__", "modulename": "buteo.raster.gefolki", "qualname": "BurtOF.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">flow</span>, </span><span class=\"param\"><span class=\"n\">levels</span><span class=\"o\">=</span><span class=\"mi\">4</span></span>)</span>"}, {"fullname": "buteo.raster.gefolki.BurtOF.conv2SepMatlab", "modulename": "buteo.raster.gefolki", "qualname": "BurtOF.conv2SepMatlab", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">fen</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.BurtOF.pyrUp", "modulename": "buteo.raster.gefolki", "qualname": "BurtOF.pyrUp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">I</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.BurtOF.pyrDown", "modulename": "buteo.raster.gefolki", "qualname": "BurtOF.pyrDown", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">shape</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.rank_filter_sup", "modulename": "buteo.raster.gefolki", "qualname": "rank_filter_sup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">rad</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.rank_filter_inf", "modulename": "buteo.raster.gefolki", "qualname": "rank_filter_inf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">rad</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.gefolki.wrapData", "modulename": "buteo.raster.gefolki", "qualname": "wrapData", "kind": "function", "doc": "<p>Apply the [u,v] optical flow to the data I</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I</span>, </span><span class=\"param\"><span class=\"n\">u</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.grid", "modulename": "buteo.raster.grid", "kind": "module", "doc": "<h3 id=\"create-grids-from-rasters\">Create grids from rasters.</h3>\n\n<p>Cut rasters to grids. Use vectors or rasters as grids.</p>\n"}, {"fullname": "buteo.raster.grid.raster_to_grid", "modulename": "buteo.raster.grid", "qualname": "raster_to_grid", "kind": "function", "doc": "<p>Clips a raster to a grid. Generates .vrt.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset]\n    The input raster.</p>\n\n<p>grid : Union[str, ogr.DataSource]\n    The grid to use.</p>\n\n<p>out_dir : str\n    The output directory.</p>\n\n<p>use_field : bool, optional\n    A field to use to name the grid cells, default: None.</p>\n\n<p>generate_vrt : bool, optional\n    If True, the output raster will be a .vrt, default: True.</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten, default: True.</p>\n\n<p>process_layer : int, optional\n    The layer from the grid to process, default: 0.</p>\n\n<p>creation_options : Optional[List[str]], optional\n    Creation options for the output raster, default: None.</p>\n\n<p>verbose : int, optional\n    The verbosity level, default: 0.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The file path for the newly created raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">grid</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">use_field</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">generate_vrt</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">process_layer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.metadata", "modulename": "buteo.raster.metadata", "kind": "module", "doc": "<h3 id=\"read-metadata-from-rasters\">Read metadata from rasters.</h3>\n"}, {"fullname": "buteo.raster.metadata.raster_to_metadata", "modulename": "buteo.raster.metadata", "qualname": "raster_to_metadata", "kind": "function", "doc": "<p>Reads metadata from a raster dataset or a list of raster datasets, and returns a dictionary or a list of dictionaries\ncontaining metadata information for each raster.</p>\n\n<p>Bounding boxes are in the format <code>[xmin, xmax, ymin, ymax]</code>. These are the keys in the dictionary:</p>\n\n<ul>\n<li><code>path</code> (str): Path to the raster.</li>\n<li><code>basename</code> (str): Basename of the raster.</li>\n<li><code>name</code> (str): Name of the raster without extension.</li>\n<li><code>folder</code> (str): Folder of the raster.</li>\n<li><code>ext</code> (str): Extension of the raster.</li>\n<li><code>in_memory</code> (bool): Whether the raster is in memory or not.</li>\n<li><code>driver</code> (str): Driver of the raster.</li>\n<li><code>projection_osr</code> (osr.SpatialReference): Projection of the raster as an osr.SpatialReference object.</li>\n<li><code>projection_wkt</code> (str): Projection of the raster as a WKT string.</li>\n<li><code>geotransform</code> (tuple): Geotransform of the raster.</li>\n<li><code>size</code> (tuple): Size of the raster in pixels.</li>\n<li><code>shape</code> (list): Shape of the raster in pixels. (height, width, bands)</li>\n<li><code>height</code> (int): Height of the raster in pixels.</li>\n<li><code>width</code> (int): Width of the raster in pixels.</li>\n<li><code>pixel_size</code> (tuple): Pixel size of the raster in units of the projection.</li>\n<li><code>pixel_width</code> (float): Pixel width of the raster in units of the projection.</li>\n<li><code>pixel_height</code> (float): Pixel height of the raster in units of the projection.</li>\n<li><code>origin</code> (tuple): Origin of the raster in units of the projection.</li>\n<li><code>origin_x</code> (float): Origin x of the raster in units of the projection.</li>\n<li><code>origin_y</code> (float): Origin y of the raster in units of the projection.</li>\n<li><code>bbox</code> (list): Bounding box of the raster in units of the projection. <code>[xmin, xmax, ymin, ymax]</code></li>\n<li><code>bbox_gdal</code> (list): Bounding box of the raster in GDAL format. <code>[xmin, ymin, xmax, ymax]</code></li>\n<li><code>bbox_latlng</code> (list): Bounding box of the raster in latlng format. <code>[ymin, xmin, ymax, xmax]</code></li>\n<li><code>bounds_latlng</code> (str): Bounding box of the raster in latlng format as a WKT string.</li>\n<li><code>x_min</code> (float): Minimum x of the raster in units of the projection.</li>\n<li><code>x_max</code> (float): Maximum x of the raster in units of the projection.</li>\n<li><code>y_min</code> (float): Minimum y of the raster in units of the projection.</li>\n<li><code>y_max</code> (float): Maximum y of the raster in units of the projection.</li>\n<li><code>bands</code> (int): Number of bands in the raster.</li>\n<li><code>dtype_gdal</code> (int): GDAL data type of the raster.</li>\n<li><code>dtype</code> (numpy.dtype): Numpy data type of the raster.</li>\n<li><code>dtype_name</code> (str): Name of the numpy data type of the raster.</li>\n<li><code>area_latlng</code> (float): Area of the raster in latlng units.</li>\n<li><code>area</code> (float): Area of the raster in units of the projection.</li>\n</ul>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str or gdal.Dataset or list\n    A path to a raster or a gdal.Dataset, or a list of paths to rasters.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dict or list of dict\n    A dictionary or a list of dictionaries containing metadata information for each raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.nodata", "modulename": "buteo.raster.nodata", "kind": "module", "doc": "<h3 id=\"handle-nodata-values-in-rasters\">Handle nodata values in rasters.</h3>\n\n<p>A module to handle the various aspects of NODATA in raster files.</p>\n"}, {"fullname": "buteo.raster.nodata.raster_has_nodata", "modulename": "buteo.raster.nodata", "qualname": "raster_has_nodata", "kind": "function", "doc": "<p>Check if a raster or a list of rasters contain nodata values.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset, List]\n    The raster to check for nodata values.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[bool, List[bool]\n    True if the raster or list of rasters contain nodata values.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.nodata.raster_get_nodata", "modulename": "buteo.raster.nodata", "qualname": "raster_get_nodata", "kind": "function", "doc": "<p>Get the nodata value of a raster or a list of rasters.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset, List]\n    The raster to get nodata values from.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[float, int, None, List[Union[float, int, None]]]\n    The nodata value of the raster or list of rasters.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.nodata.raster_set_nodata", "modulename": "buteo.raster.nodata", "qualname": "raster_set_nodata", "kind": "function", "doc": "<p>Sets all the nodata for raster(s) to a value.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset, List]\n    The raster(s) to set nodata values for.</p>\n\n<p>nodata : float, int, or None\n    The nodata value to set for the raster(s).\n    If nodata is None, nodata will be removed from the raster(s).</p>\n\n<p>out_path : str, optional\n    The destination of the changed rasters, default: None</p>\n\n<p>in_place : bool, optional\n    Should the rasters be changed in_place or copied?, default: True</p>\n\n<p>overwrite : bool, optional\n    Should the rasters be overwritten if they already exist? default: True</p>\n\n<p>prefix : str, optional\n    Prefix to add to the output, default: \"\"</p>\n\n<p>suffix : str, optional\n    Suffix to add to the output, default: \"_nodata_set\"</p>\n\n<p>creation_options : List, optional\n    Creation options for the output rasters, default: None</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List]\n    Returns the rasters with nodata set.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">nodata</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">in_place</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.proximity", "modulename": "buteo.raster.proximity", "kind": "module", "doc": "<h3 id=\"calculate-distances-on-a-raster\">Calculate distances on a raster.</h3>\n\n<p>Module to calculate the distance from a pixel value to other pixels.</p>\n"}, {"fullname": "buteo.raster.proximity.raster_get_proximity", "modulename": "buteo.raster.proximity", "qualname": "raster_get_proximity", "kind": "function", "doc": "<p>Calculate the proximity of input_raster to values.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset, List]\n    The raster(s) to use as input.</p>\n\n<p>target_value : Union[int, float], optional\n    The value to use as target, default: 1.</p>\n\n<p>unit : str, optional\n    The unit to use for the distance, GEO or PIXEL, default: \"GEO\".</p>\n\n<p>out_path : Union[str, None, List], optional\n    The output path, default: None.</p>\n\n<p>max_dist : Union[int, float], optional\n    The maximum distance to use, default: 1000.</p>\n\n<p>add_border : bool, optional\n    If True, a border will be added to the raster, default: False.</p>\n\n<p>border_value : Union[int, float], optional\n    The value to use for the border, default: 0.</p>\n\n<p>inverted : bool, optional\n    If True, the target will be inversed, default: False.</p>\n\n<p>overwrite : bool, optional\n    If the output path exists already, should it be overwritten?, default: True.</p>\n\n<p>prefix : str, optional\n    Prefix to add to the output, default: \"\".</p>\n\n<p>suffix : str, optional\n    Suffix to add to the output, default: \"_proximity\".</p>\n\n<p>add_uuid : bool, optional\n    Should a uuid be added to the output path?, default: False.</p>\n\n<p>add_timestamp : bool, optional\n    Should a timestamp be added to the output path?, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    A path to a raster with the calculated proximity.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">target_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;geo&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_dist</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">add_border</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">border_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">inverted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.reproject", "modulename": "buteo.raster.reproject", "kind": "module", "doc": "<h3 id=\"reproject-rasters\">Reproject rasters.</h3>\n\n<p>Module to reproject rasters to a target coordinate reference system.\nCan uses references from vector or other raster datasets.</p>\n"}, {"fullname": "buteo.raster.reproject.raster_reproject", "modulename": "buteo.raster.reproject", "qualname": "raster_reproject", "kind": "function", "doc": "<p>Reproject raster(s) to a target coordinate reference system.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset, List[Union[str, gdal.Dataset]]]\n    The raster(s) to reproject.</p>\n\n<p>projection : Union[int, str, gdal.Dataset, ogr.DataSource, osr.SpatialReference]\n    The projection to reproject the raster to. The input can be a WKT proj,\n    EPSG proj, Proj, osr proj, or read from a vector or raster datasource\n    either from path or in-memory.</p>\n\n<p>out_path : Optional[Union[str, List[str]]], optional\n    The output path, default: None. If not provided, the output path is inferred\n    from the input.</p>\n\n<p>resample_alg : str, optional\n    The resampling algorithm, default: \"nearest\".</p>\n\n<p>copy_if_same : bool, optional\n    If the input and output projections are the same, copy the input raster to the\n    output path, default: True.</p>\n\n<p>overwrite : bool, optional\n    If the output path already exists, overwrite it, default: True.</p>\n\n<p>creation_options : Optional[List[str]], optional\n    A list of creation options for the output raster, default: None.</p>\n\n<p>dst_nodata : Union[str, int, float], optional\n    The nodata value for the output raster, default: \"infer\".</p>\n\n<p>dtype : Optional[str], optional\n    The data type for the output raster, default: None.</p>\n\n<p>prefix : str, optional\n    The prefix to add to the output path, default: \"\".</p>\n\n<p>suffix : str, optional\n    The suffix to add to the output path, default: \"\".</p>\n\n<p>add_uuid : bool, optional\n    If True, add a UUID to the output path, default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The output path(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">resample_alg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;nearest&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">copy_if_same</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_nodata</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;infer&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.resample", "modulename": "buteo.raster.resample", "kind": "module", "doc": "<h3 id=\"resample-rasters\">Resample rasters.</h3>\n\n<p>Module to resample rasters to a target resolution.\nCan uses references from vector or other raster datasets.</p>\n"}, {"fullname": "buteo.raster.resample.raster_resample", "modulename": "buteo.raster.resample", "qualname": "raster_resample", "kind": "function", "doc": "<p>Resampled raster(s) given a target size.\nBeware, if your input is in latitude and longitude, you'll need to specify the target_size in degrees as well.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : str/gdal.Dataset/list\n    The input raster(s) to resample.</p>\n\n<p>target_size : str/int/ogr.DataSource/gdal.Dataset\n    The desired resolution for the resampled raster(s), in the same unit as the raster projection.\n    x_res, y_res - or x_pixels, y_pixels if target_in_pixels is True.</p>\n\n<p>target_in_pixels : bool, optional\n    If True, interprets target_size as the number of pixels, default: False</p>\n\n<p>out_path : str, optional\n    The output path for the resampled raster(s). If not provided, the output path is inferred from the input raster(s), default: None</p>\n\n<p>resample_alg : str, optional\n    The resampling algorithm to use, default: \"nearest\"</p>\n\n<p>creation_options : list, optional\n    A list of creation options for the output raster(s), default: None</p>\n\n<p>dtype : str, optional\n    The output data type, default: None</p>\n\n<p>dst_nodata : str/int/float, optional\n    The nodata value for the output raster(s), default: \"infer\"</p>\n\n<p>prefix : str, optional\n    A prefix to add to the output path, default: \"\"</p>\n\n<p>suffix : str, optional\n    A suffix to add to the output path, default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, adds a uuid to the output path, default: False</p>\n\n<p>add_timestamp : bool, optional\n    If True, adds a timestamp to the output path, default: False</p>\n\n<p>verbose : int, optional\n    The verbosity level, default: 0</p>\n\n<p>ram : float, optional\n    The amount of RAM to use for the resampling, default: 0.8 (80% of the total RAM)</p>\n\n<p>ram_max : int, optional\n    The maximum amount of RAM to use for the resampling, default: None</p>\n\n<p>ram_min : int, optional\n    The minimum amount of RAM to use for the resampling, default: 100</p>\n\n<p>overwrite : bool, optional\n    If True, overwrites the output raster(s) if it/they already exist, default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str/List[str]\n    The output path(s) of the resampled raster(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span>,</span><span class=\"param\">\t<span class=\"n\">target_size</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">target_in_pixels</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">resample_alg</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_nodata</span><span class=\"o\">=</span><span class=\"s1\">&#39;infer&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">ram</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">ram_max</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ram_min</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.resample.resample_array", "modulename": "buteo.raster.resample", "qualname": "resample_array", "kind": "function", "doc": "<p>Resample a numpy array using the GDAL algorithms.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span>, </span><span class=\"param\"><span class=\"n\">target_shape_pixels</span>, </span><span class=\"param\"><span class=\"n\">resample_alg</span><span class=\"o\">=</span><span class=\"s1\">&#39;bilinear&#39;</span>, </span><span class=\"param\"><span class=\"n\">channel_last</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.shift", "modulename": "buteo.raster.shift", "kind": "module", "doc": "<h3 id=\"shift-rasters\">Shift rasters.</h3>\n\n<p>Module to shift the location of rasters in geographic coordinates.</p>\n"}, {"fullname": "buteo.raster.shift.raster_shift", "modulename": "buteo.raster.shift", "qualname": "raster_shift", "kind": "function", "doc": "<p>Shifts a raster in a given direction. (The frame is shifted)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, List, gdal.Dataset]\n    The raster(s) to be shifted.</p>\n\n<p>shift_list : List[Union[int, float]]\n    The shift in x and y direction.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output raster. If None, the raster is created in memory., default: None</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it already exists., default: True</p>\n\n<p>prefix : str, optional\n    The prefix to be added to the output raster name., default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to be added to the output raster name., default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, a unique identifier will be added to the output raster name., default: False</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output raster name., default: False</p>\n\n<p>creation_options : Optional[List[str]], optional\n    The creation options to be used when creating the output., default: None</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the shifted raster(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">shift_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">creation_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.shift.raster_shift_pixel", "modulename": "buteo.raster.shift", "qualname": "raster_shift_pixel", "kind": "function", "doc": "<p>Shifts a raster in a given direction. (The pixels are shifted, not the frame)</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset]\n    The raster to be shifted.</p>\n\n<p>shift_list : List[Union[int, float]]\n    The shift in x and y direction.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output raster. If None, the raster is created in memory., default: None</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The path to the shifted raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">shift_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.vectorize", "modulename": "buteo.raster.vectorize", "kind": "module", "doc": "<h3 id=\"vectorize-rasters\">Vectorize rasters.</h3>\n\n<p>Module to turn rasters into vector representations.</p>\n"}, {"fullname": "buteo.raster.vectorize.raster_vectorize", "modulename": "buteo.raster.vectorize", "qualname": "raster_vectorize", "kind": "function", "doc": "<p>Vectorizes a raster by turning it into polygons per unique value. Works\nbest on integer rasters.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster : Union[str, gdal.Dataset, List]\n    The raster(s) to vectorize.</p>\n\n<p>out_path : Optional[str], optional\n    The path(s) to save the vectorized raster(s) to. Default: None</p>\n\n<p>band : int, optional\n    The band to vectorize. Default: 1</p>\n\n<p>prefix : str, optional\n    The prefix to be added to the output raster name. Default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to be added to the output raster name. Default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, a unique identifier will be added to the output raster name. Default: False</p>\n\n<p>add_timestamp : bool, optional\n    If True, a timestamp will be added to the output raster name. Default: False</p>\n\n<p>overwrite : bool, optional\n    If True, the output raster will be overwritten if it already exists. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List]\n    The path(s) to the vectorized raster(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">band</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">attribute_field</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.warp", "modulename": "buteo.raster.warp", "kind": "module", "doc": "<h3 id=\"vectorize-rasters\">Vectorize rasters.</h3>\n\n<p>Module to turn rasters into vector representations.</p>\n"}, {"fullname": "buteo.raster.warp.raster_warp", "modulename": "buteo.raster.warp", "qualname": "raster_warp", "kind": "function", "doc": "<p>Warp a raster to a new projection, resolution, extent, or size.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">src_projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">resampling_alg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;near&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">align_pixels</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">dst_extent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_extent_srs</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_x_res</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_y_res</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dst_nodata</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">clip_geom</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.raster.zonal_statistics", "modulename": "buteo.raster.zonal_statistics", "kind": "module", "doc": "<h3 id=\"calculate-zonal-statistics-between-a-raster-and-a-vector\">Calculate zonal statistics between a raster and a vector.</h3>\n"}, {"fullname": "buteo.utils", "modulename": "buteo.utils", "kind": "module", "doc": "<h3 id=\"various-utility-functions-to-work-with-the-underlying-systems\">Various utility functions to work with the underlying systems.</h3>\n"}, {"fullname": "buteo.utils.utils_aux", "modulename": "buteo.utils.utils_aux", "kind": "module", "doc": "<h3 id=\"generic-utility-functions\">Generic utility functions.</h3>\n\n<p>Functions that make interacting with the toolbox easier.</p>\n"}, {"fullname": "buteo.utils.utils_aux.split_number", "modulename": "buteo.utils.utils_aux", "qualname": "split_number", "kind": "function", "doc": "<p>Splits a number into parts of equal size.\nThe remainder is distributed starting on the left.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split_number</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">split_number</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>num : int\n    The number to split.</p>\n\n<p>parts : int\n    The number of parts to split the number into.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>List[int]\n    A list of the parts.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">parts</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_base", "modulename": "buteo.utils.utils_base", "kind": "module", "doc": "<h3 id=\"generic-utility-functions\">Generic utility functions.</h3>\n\n<p>Functions that make interacting with the toolbox easier.</p>\n"}, {"fullname": "buteo.utils.utils_bbox", "modulename": "buteo.utils.utils_bbox", "kind": "module", "doc": "<h3 id=\"bounding-box-utility-functions\">Bounding box utility functions.</h3>\n\n<p>Various utility functions to work with bounding boxes and gdal.</p>\n\n<p>There are two different formats for bounding boxes used by GDAL:</br>\nOGR:  <code>[x_min, x_max, y_min, y_max]</code></br>\nWARP: <code>[x_min, y_min, x_max, y_max]</code></br></p>\n\n<p>_If nothing else is stated, the OGR format is used._</p>\n\n<p>The GDAL geotransform is a list of six parameters:</br>\n<code>x_min, pixel_width, row_skew, y_max, column_skew, pixel_height (negative for north-up)</code></p>\n"}, {"fullname": "buteo.utils.utils_bbox.get_bbox_from_dataset", "modulename": "buteo.utils.utils_bbox", "qualname": "get_bbox_from_dataset", "kind": "function", "doc": "<p>Get the bbox from a dataset.\nThe bounding box is in the same projection as the dataset.\nIf you want the Bounding Box in WGS84, use <code>get_bbox_from_dataset_wgs84</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : str, gdal.Dataset, ogr.DataSource\n    A dataset or dataset path.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>list\n    The bounding box in ogr format: <code>[x_min, x_max, y_min, y_max]</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_gdal", "modulename": "buteo.utils.utils_gdal", "kind": "module", "doc": "<h3 id=\"utility-functions-to-work-with-gdal\">Utility functions to work with GDAL.</h3>\n\n<p>These functions are used to interact with basic GDAL objects.</p>\n"}, {"fullname": "buteo.utils.utils_gdal.get_gdal_memory", "modulename": "buteo.utils.utils_gdal", "qualname": "get_gdal_memory", "kind": "function", "doc": "<p>Get at list of all active memory layers in GDAL.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>list\n    A list of all active memory layers in GDAL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_gdal.clear_gdal_memory", "modulename": "buteo.utils.utils_gdal", "qualname": "clear_gdal_memory", "kind": "function", "doc": "<p>Clears all gdal memory.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This function is not guaranteed to work.\nIt is a best effort attempt to clear all gdal memory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_gdal.delete_dataset_if_in_memory", "modulename": "buteo.utils.utils_gdal", "qualname": "delete_dataset_if_in_memory", "kind": "function", "doc": "<p>Delete raster or vector if it is in memory</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>raster_or_vector : Union[str, gdal.Dataset, ogr.DataSource]\n    The raster or vector to delete.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if the raster or vector was deleted, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">raster_or_vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_gdal.delete_dataset_if_in_memory_list", "modulename": "buteo.utils.utils_gdal", "qualname": "delete_dataset_if_in_memory_list", "kind": "function", "doc": "<p>Deletes a list of raster or vector if they are in memory</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>list_of_raster_or_vectors : List[Union[str, gdal.Dataset, ogr.DataSource]]\n    A list of rasters or vectors to delete.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if any of the rasters or vectors were deleted, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">list_of_raster_or_vectors</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_io", "modulename": "buteo.utils.utils_io", "kind": "module", "doc": "<h3 id=\"utility-functions-read-and-write-buteo-files\">Utility functions read and write buteo files.</h3>\n"}, {"fullname": "buteo.utils.utils_path", "modulename": "buteo.utils.utils_path", "kind": "module", "doc": "<h3 id=\"generic-utility-functions\">Generic utility functions.</h3>\n\n<p>Functions that make interacting with the toolbox easier.</p>\n"}, {"fullname": "buteo.utils.utils_projection", "modulename": "buteo.utils.utils_projection", "kind": "module", "doc": "<h3 id=\"utility-functions-to-work-with-gdal-and-projections\">Utility functions to work with GDAL and projections.</h3>\n"}, {"fullname": "buteo.utils.utils_projection.parse_projection", "modulename": "buteo.utils.utils_projection", "qualname": "parse_projection", "kind": "function", "doc": "<p>Parses a gdal, ogr or osr data source and extracts the projection. If\na string or int is passed, it attempts to open it and return the projection as\nan osr.SpatialReference.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>projection : Union[str, int, gdal.Dataset, ogr.DataSource, osr.SpatialReference]\n    The projection to parse.</p>\n\n<p>return_wkt : bool, optional\n    Whether to return the projection as a WKT string or an osr.SpatialReference</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[osr.SpatialReference, str]:\n    The projection as an osr.SpatialReference or a WKT string.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">return_wkt</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_projection.reproject_bbox", "modulename": "buteo.utils.utils_projection", "qualname": "reproject_bbox", "kind": "function", "doc": "<p>Reprojects an OGR formatted bbox.\nOGR formatted bboxes are in the format <code>[x_min, x_max, y_min, y_max]</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bbox_ogr : List[Union[int, float]]\n    The OGR formatted bbox to reproject.</p>\n\n<p>source_projection : Union[str, int, gdal.Dataset, ogr.DataSource, osr.SpatialReference]\n    The source projection.</p>\n\n<p>target_projection : Union[str, int, gdal.Dataset, ogr.DataSource, osr.SpatialReference]\n    The target projection.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>List[Union[int, float]]:\n    The reprojected bbox.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bbox_ogr</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">source_projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">target_projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_projection.set_projection", "modulename": "buteo.utils.utils_projection", "qualname": "set_projection", "kind": "function", "doc": "<p>Sets the projection of a dataset.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dataset : Union[str, gdal.Dataset, ogr.DataSource]\n    The dataset to set the projection of.</p>\n\n<p>projection : Union[str, int, gdal.Dataset, ogr.DataSource, osr.SpatialReference]\n    The projection to set.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">flip_y_axis</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_size_x</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_size_y</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.utils.utils_translate", "modulename": "buteo.utils.utils_translate", "kind": "module", "doc": "<h3 id=\"gdal-enum-like-functions\">GDAL Enum-like Functions.</h3>\n\n<p>Functions to translate between <strong>GDAL</strong> and <strong>NumPy</strong> datatypes.</p>\n"}, {"fullname": "buteo.vector", "modulename": "buteo.vector", "kind": "module", "doc": "<h3 id=\"work-with-vector-data-and-attributes-with-ease\">Work with vector data and attributes with ease.</h3>\n"}, {"fullname": "buteo.vector.buffer", "modulename": "buteo.vector.buffer", "kind": "module", "doc": "<h3 id=\"clip-vectors-to-other-geometries\">Clip vectors to other geometries.</h3>\n\n<p>Clip vector files with other geometries. Can come from rasters or vectors.</p>\n"}, {"fullname": "buteo.vector.buffer.vector_buffer", "modulename": "buteo.vector.buffer", "qualname": "vector_buffer", "kind": "function", "doc": "<p>Buffers a vector with a fixed distance or an attribute.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[str, ogr.DataSource]]\n    Vector(s) to buffer.</p>\n\n<p>distance : Union[int, float, str]\n    The distance to buffer with. If string, uses the attribute of that name.</p>\n\n<p>out_path : Optional[str], optional\n    Output path. If None, memory vectors are created. Default: None</p>\n\n<p>prefix : str, optional\n    Prefix to add to the output path. Default: \"\"</p>\n\n<p>suffix : str, optional\n    Suffix to add to the output path. Default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Add UUID to the output path. Default: False</p>\n\n<p>add_timestamp : bool, optional\n    Add timestamp to the output path. Default: False</p>\n\n<p>in_place : bool, optional\n    If True, overwrites the input vector. Default: False</p>\n\n<p>overwrite : bool, optional\n    Overwrite output if it already exists. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    Output path(s) of clipped vector(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">distance</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">add_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">in_place</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.clip", "modulename": "buteo.vector.clip", "kind": "module", "doc": "<h3 id=\"clip-vectors-to-other-geometries\">Clip vectors to other geometries.</h3>\n"}, {"fullname": "buteo.vector.clip.vector_clip", "modulename": "buteo.vector.clip", "qualname": "vector_clip", "kind": "function", "doc": "<p>Clips a vector to a geometry.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    Vector(s) to clip.</p>\n\n<p>clip_geom : Union[str, ogr.DataSource]\n    Vector to clip with.</p>\n\n<p>out_path : Optional[str], optional\n    Output path. If None, memory vectors are created. Default: None</p>\n\n<p>to_extent : bool, optional\n    Clip to extent. Default: False</p>\n\n<p>target_projection : Optional[Union[str, int, gdal.Dataset, ogr.DataSource, osr.SpatialReference]], optional\n    Target projection. Default: None</p>\n\n<p>preserve_fid : bool, optional\n    Preserve fid. Default: True</p>\n\n<p>prefix : str, optional\n    Prefix to add to the output path. Default: \"\"</p>\n\n<p>suffix : str, optional\n    Suffix to add to the output path. Default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Add a uuid to the output path. Default: False</p>\n\n<p>overwrite : bool, optional\n    Overwrite output. Default: True</p>\n\n<p>promote_to_multi : bool, optional\n    Promote to multi. Default: True</p>\n\n<p>verbose : bool, optional\n    Print progress/warnings. Default: False</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    Path to the clipped vector(s)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">clip_geom</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">to_extent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">target_projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preserve_fid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">promote_to_multi</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.convert_parts", "modulename": "buteo.vector.convert_parts", "kind": "module", "doc": "<h3 id=\"convert-geometry-composition\">Convert geometry composition.</h3>\n\n<p>Convert geometries from multiparts and singleparts and vice versa.</p>\n"}, {"fullname": "buteo.vector.convert_parts.vector_singlepart_to_multipart", "modulename": "buteo.vector.convert_parts", "qualname": "vector_singlepart_to_multipart", "kind": "function", "doc": "<p>Converts a singlepart vector to multipart.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    The vector(s) to convert.</p>\n\n<p>out_path : Optional[str], optional\n    The path(s) to the output vector. If None a memory output is produced. Default: None</p>\n\n<p>add_index : bool, optional\n    Add an geospatial index to the output vector. Default: True</p>\n\n<p>process_layer : int, optional\n    The layer index to process. Default: -1</p>\n\n<p>prefix : str, optional\n    The prefix to add to the layer name. Default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to add to the layer name. Default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Add a UUID field to the output vector. Default: False</p>\n\n<p>overwrite : bool, optional\n    Overwrite the output vector if it already exists. Default: True</p>\n\n<p>allow_lists : bool, optional\n    Allow lists of vectors as input. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the output vector(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_index</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">process_layer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">allow_lists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.convert_parts.vector_multipart_to_singlepart", "modulename": "buteo.vector.convert_parts", "qualname": "vector_multipart_to_singlepart", "kind": "function", "doc": "<p>Converts a multipart vector to singlepart.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    The vector(s) to convert.</p>\n\n<p>out_path : Optional[str], optional\n    The path(s) to the output vector. If None a memory output is produced. Default: None</p>\n\n<p>overwrite : bool, optional\n    Overwrite the output vector if it already exists. Default: True</p>\n\n<p>add_index : bool, optional\n    Add an geospatial index to the output vector. Default: True</p>\n\n<p>process_layer : int, optional\n    The layer index to process. Default: -1</p>\n\n<p>verbose : bool, optional\n    Print progress. Default: False</p>\n\n<p>prefix : str, optional\n    The prefix to add to the layer name. Default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to add to the layer name. Default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Add a UUID field to the output vector. Default: False</p>\n\n<p>allow_lists : bool, optional\n    Allow lists of vectors as input. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the output vector(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">add_index</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">process_layer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">allow_lists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector", "modulename": "buteo.vector.core_vector", "kind": "module", "doc": "<h3 id=\"basic-io-functions-for-working-with-vectors\">Basic IO functions for working with vectors.</h3>\n\n<p>The basic module for interacting with vector data</p>\n"}, {"fullname": "buteo.vector.core_vector.vector_open", "modulename": "buteo.vector.core_vector", "qualname": "vector_open", "kind": "function", "doc": "<p>Opens a vector to an ogr.Datasource class.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : str, ogr.DataSource, gdal.Dataset, list[str, ogr.DataSource, gdal.Dataset]\n    The vector to open. If a raster is supplied the bounding box is opened as a vector.</p>\n\n<p>writeable : bool, optional\n    If True, the vector is opened in write mode. Default: True</p>\n\n<p>allow_raster : bool, optional\n    If True, a raster will be opened as a vector bounding box. Default: True</p>\n\n<p>allow_lists : bool, optional\n    If True, the input can be a list of vectors. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>ogr.DataSource, List[ogr.DataSource]\n    The opened vector(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">writeable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">allow_raster</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_filter", "modulename": "buteo.vector.core_vector", "qualname": "vector_filter", "kind": "function", "doc": "<p>Filters a vector using its attribute table and a function.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[ogr.DataSource, str, List[Union[ogr.DataSource, str]]]\n    A vector layer(s) or path(s) to a vector file.</p>\n\n<p>filter_function : Callable\n    A function that takes a dictionary of attributes and returns a boolean.</p>\n\n<p>out_path : Optional[str], optional\n    Path to the output vector file. If None, a memory vector will be created. default: None</p>\n\n<p>process_layer : int, optional\n    The index of the layer to process. If -1, all layers will be processed. default: -1</p>\n\n<p>prefix : str, optional\n    A prefix to add to the output vector file. default: \"\"</p>\n\n<p>suffix : str, optional\n    A suffix to add to the output vector file. default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    If True, a uuid will be added to the output path. default: False</p>\n\n<p>overwrite : bool, optional\n    If True, the output file will be overwritten if it already exists. default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the output vector file(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">filter_function</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">process_layer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_add_index", "modulename": "buteo.vector.core_vector", "qualname": "vector_add_index", "kind": "function", "doc": "<p>Adds a spatial index to the vector in place, if it doesn't have one.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[ogr.DataSource, str, List[Union[ogr.DataSource, str]]]\n    A vector layer(s) or path(s) to a vector file.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the input vector file(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_get_attribute_table", "modulename": "buteo.vector.core_vector", "qualname": "vector_get_attribute_table", "kind": "function", "doc": "<p>Get the attribute table(s) of a vector.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[str, ogr.DataSource]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>process_layer : int, optional\n    The layer to process. Default: 0 (first layer).</p>\n\n<p>include_fids : bool, optional\n    If True, will include the FID column. Default: False.</p>\n\n<p>include_geometry : bool, optional\n    If True, will include the geometry column. Default: False.</p>\n\n<p>include_attributes : bool, optional\n    If True, will include the attribute columns. Default: True.</p>\n\n<p>return_header : bool, optional\n    If True, will return the header. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>attribute_table : Dict[str, Any]\n    The attribute table(s) of the vector(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">process_layer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">include_fids</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">include_geometry</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">include_attributes</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">return_header</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_filter_layer", "modulename": "buteo.vector.core_vector", "qualname": "vector_filter_layer", "kind": "function", "doc": "<p>Filters a multi-layer vector source to a single layer.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[str, ogr.DataSource]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>layer_name_or_idx : Union[str, int]\n    The name or index of the layer to filter.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output vector. If None, will create a new file in the same directory as the input vector. Default: None.</p>\n\n<p>prefix : str, optional\n    Prefix to add to the output vector. Default: \"\".</p>\n\n<p>suffix : str, optional\n    Suffix to add to the output vector. Default: \"_layer\".</p>\n\n<p>add_uuid : bool, optional\n    If True, will add a UUID to the output vector. Default: False.</p>\n\n<p>overwrite : bool, optional\n    If True, will overwrite the output vector if it already exists. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out_path : str\n    Path to the output vector.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">layer_name_or_idx</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;_layer&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_to_extent", "modulename": "buteo.vector.core_vector", "qualname": "vector_to_extent", "kind": "function", "doc": "<p>Converts a vector to a vector file with the extent as a polygon.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : str or ogr.DataSource\n    The vector to convert.</p>\n\n<p>out_path : str, optional\n    The path to save the extent to. If None, the extent is saved in memory. Default: None.</p>\n\n<p>latlng : bool, optional\n    If True, the extent is returned in latlng coordinates. If false,\n    the projection of the vector is used. Default: False.</p>\n\n<p>overwrite : bool, optional\n    If True, the output file is overwritten if it exists. Default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The path to the extent.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">latlng</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_copy", "modulename": "buteo.vector.core_vector", "qualname": "vector_copy", "kind": "function", "doc": "<p>Creates a copy of a vector.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[str, ogr.DataSource]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output vector. If None, will create a new file in the same directory as the input vector. Default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out_path : str\n    Path to the output vector.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_reset_fids", "modulename": "buteo.vector.core_vector", "qualname": "vector_reset_fids", "kind": "function", "doc": "<p>Resets the FID column of a vector to 0, 1, 2, 3, ...</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[str, ogr.DataSource]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output vector. If None, will create a new file in the same directory as the input vector. Default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out_path : str\n    Path to the output vector.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_create_fid_field", "modulename": "buteo.vector.core_vector", "qualname": "vector_create_fid_field", "kind": "function", "doc": "<p>Creates a FID field in a vector if it doesn't exist.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[str, ogr.DataSource]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>str: original vector path\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_create_attribute_from_fid", "modulename": "buteo.vector.core_vector", "qualname": "vector_create_attribute_from_fid", "kind": "function", "doc": "<p>Creates an attribute from the FID field in a vector.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[str, ogr.DataSource]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>attribute_name : str, optional\n    The name of the attribute to create. Default: \"id\"</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>str: original vector path\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">attribute_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;id&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_from_bbox", "modulename": "buteo.vector.core_vector", "qualname": "vector_from_bbox", "kind": "function", "doc": "<p>Creates a vector from a bounding box.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>bbox : List[float, int]\n    The bounding box to create the vector from. Must be in the format [x_min, x_max, y_min, y_max].</p>\n\n<p>projection : Union[str, osr.SpatialReference, None], optional\n    The projection of the bounding box. If None, the default (latlng) projection is used. Default: None.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output vector. If None, will create a new file in the same directory as the input vector. Default: None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bbox</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_from_wkt", "modulename": "buteo.vector.core_vector", "qualname": "vector_from_wkt", "kind": "function", "doc": "<p>Creates a vector file from a wkt string.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>wkt : str\n    A string with the Well-known-text representation of a vector.</p>\n\n<p>projection : Union[str, osr.SpatialReference, int, None], optional\n    The projection of the points. If None, the default (latlng) projection is used. Default: None.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output vector. If None, will create a new file in the same directory as the input vector. Default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The path to the created vector file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">wkt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_from_points", "modulename": "buteo.vector.core_vector", "qualname": "vector_from_points", "kind": "function", "doc": "<p>Creates a point vector from a list of points.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>points : List[List[float, int]]\n    The points to create the vector from. Must be in the format [[x1, y1], [x2, y2], ...].</p>\n\n<p>projection : Union[str, osr.SpatialReference, int, None], optional\n    The projection of the points. If None, the default (latlng) projection is used. Default: None.</p>\n\n<p>out_path : Optional[str], optional\n    The path to the output vector. If None, will create a new file in the same directory as the input vector. Default: None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">points</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reverse_xy_order</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_add_field", "modulename": "buteo.vector.core_vector", "qualname": "vector_add_field", "kind": "function", "doc": "<p>Adds a field to a vector in place.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>field : str\n    The name of the field to add.</p>\n\n<p>field_type : str\n    The type of the field to add.\n    <code>['int', 'integer', 'float', 'double', 'string', 'date', 'datetime', 'time', 'binary', 'intlist', 'integerlist', 'floatlist', 'doublelist', 'stringlist', 'datelist', 'datetimelist', 'timelist', 'binarylist']</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the output vector file(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">field_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">field_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_set_attribute_table", "modulename": "buteo.vector.core_vector", "qualname": "vector_set_attribute_table", "kind": "function", "doc": "<p>Sets the attribute table of a vector in place.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>header : List[str]\n    The header of the attributes to update in the table.</p>\n\n<p>attribute_table : List[List[Any]]\n    The attributes to update in the table.</p>\n\n<p>match_fids : bool, optional\n    If True, will match the FIDs of the input vector and the attribute table. Default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the output vector file(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">attribute_table</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">match</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;fid&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.core_vector.vector_delete_fields", "modulename": "buteo.vector.core_vector", "qualname": "vector_delete_fields", "kind": "function", "doc": "<p>Deletes fields from a vector in place.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>fields : List[str]\n    The fields to delete.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the output vector file(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.dissolve", "modulename": "buteo.vector.dissolve", "kind": "module", "doc": "<h3 id=\"dissolve-vector-geometries\">Dissolve vector geometries.</h3>\n\n<p>Dissolve vectors by attributes or geometry.</p>\n"}, {"fullname": "buteo.vector.dissolve.vector_dissolve", "modulename": "buteo.vector.dissolve", "qualname": "vector_dissolve", "kind": "function", "doc": "<p>Clips a vector to a geometry.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    The vector(s) to clip.</p>\n\n<p>attribute : Optional[str], optional\n    The attribute to use for the dissolve, default: None</p>\n\n<p>out_path : Optional[str], optional\n    The output path, default: None</p>\n\n<p>add_index : bool, optional\n    Add a spatial index to the output, default: True</p>\n\n<p>process_layer : int, optional\n    The layer to process, default: -1</p>\n\n<p>prefix : str, optional\n    The prefix to add to the output path, default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to add to the output path, default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Add a uuid to the output path, default: False</p>\n\n<p>overwrite : bool, optional\n    Overwrite the output, default: True</p>\n\n<p>allow_lists : bool, optional\n    Allow lists as input, default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, ogr.DataSource]\n    The output path or ogr.DataSource</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">attribute</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_index</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">process_layer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">allow_lists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.grid", "modulename": "buteo.vector.grid", "kind": "module", "doc": "<p>Create vector grids from references or hardcode</p>\n"}, {"fullname": "buteo.vector.grid.create_hexagonal_grid", "modulename": "buteo.vector.grid", "qualname": "create_hexagonal_grid", "kind": "function", "doc": "<p>Create a hexagonal grid in a given extend and projection.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>extend (list):</strong>  [xmin, ymin, xmax, ymax]</li>\n<li><strong>projection (str):</strong>  EPSG code</li>\n<li><strong>cell_size (float):</strong>  size of the hexagon</li>\n<li><strong>out_path (str):</strong>  path to save the grid</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">extend</span>, </span><span class=\"param\"><span class=\"n\">projection</span>, </span><span class=\"param\"><span class=\"n\">cell_size</span>, </span><span class=\"param\"><span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.intersect", "modulename": "buteo.vector.intersect", "kind": "module", "doc": "<h3 id=\"calculate-intersections\">Calculate intersections.</h3>\n\n<p>Calculate and tests the intersections between geometries.</p>\n"}, {"fullname": "buteo.vector.intersect.vector_intersect", "modulename": "buteo.vector.intersect", "qualname": "vector_intersect", "kind": "function", "doc": "<p>Clips a vector to a geometry.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    The vector(s) to intersect.</p>\n\n<p>clip_geom : Union[str, ogr.Geometry, List[Union[str, ogr.Geometry]]]\n    The geometry to intersect the vector(s) with.</p>\n\n<p>out_path : Optional[str], optional\n    The path(s) to save the clipped vector(s) to. Default: None</p>\n\n<p>process_layer : int, optional\n    The layer to process in the vector(s). Default: 0</p>\n\n<p>process_layer_clip : int, optional\n    The layer to process in the clip geometry. Default: 0</p>\n\n<p>add_index : bool, optional\n    Add a geospatial index to the vector(s). Default: True</p>\n\n<p>overwrite : bool, optional\n    Overwrite the output vector(s) if they already exist. Default: True</p>\n\n<p>prefix : str, optional\n    A prefix to add to the output vector(s). Default: \"\"</p>\n\n<p>suffix : str, optional\n    A suffix to add to the output vector(s). Default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Add a uuid to the output vector(s). Default: False</p>\n\n<p>allow_lists : bool, optional\n    Allow lists as input. Default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    The path(s) to the intersected vector(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">clip_geom</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">Geometry</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">Geometry</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">process_layer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">process_layer_clip</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">add_index</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">allow_lists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.merge", "modulename": "buteo.vector.merge", "kind": "module", "doc": "<h3 id=\"merge-vectors\">Merge vectors.</h3>\n\n<p>Merges vectors into a single vector file.</p>\n"}, {"fullname": "buteo.vector.merge.vector_merge_layers", "modulename": "buteo.vector.merge", "qualname": "vector_merge_layers", "kind": "function", "doc": "<p>Merge vectors to a single geopackage.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vectors : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    The input vectors.</p>\n\n<p>out_path : Optional[str], optional\n    The output path, default: None.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The output path.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vectors</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.merge.vector_merge_features", "modulename": "buteo.vector.merge", "qualname": "vector_merge_features", "kind": "function", "doc": "<p>Merge vectors to a single geopackage.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vectors : Union[str, ogr.DataSource, List[Union[str, ogr.DataSource]]]\n    The input vectors.</p>\n\n<p>out_path : Optional[str], optional\n    The output path, default: None.</p>\n\n<p>projection : Optional[str], optional\n    The projection of the output vector, default: None.\n    If None, the projection of the first input vector is used.</p>\n\n<p>single_layer : bool, optional\n    If True, all layers are merged into a single layer, default: True.</p>\n\n<p>overwrite : bool, optional\n    If True, the output file is overwritten if it exists, default: True.</p>\n\n<p>skip_failures : bool, optional\n    If True, failures are skipped, default: True.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    The output path.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vectors</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">single_layer</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">skip_failures</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.metadata", "modulename": "buteo.vector.metadata", "kind": "module", "doc": "<h3 id=\"metadata-functions-for-vector-layers\">Metadata functions for vector layers.</h3>\n"}, {"fullname": "buteo.vector.metadata.vector_to_metadata", "modulename": "buteo.vector.metadata", "qualname": "vector_to_metadata", "kind": "function", "doc": "<p>Creates a dictionary with metadata about the vector layer.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[ogr.DataSource, str, List[Union[ogr.DataSource, str]]]\n    A vector layer(s) or path(s) to a vector file.</p>\n\n<p>allow_lists : bool, optional\n    If True, vector can be a list of vector layers or paths. If False, vector must be a single vector layer or path. default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[Dict[str, Any], List[Dict[str, Any]]]</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">allow_lists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.rasterize", "modulename": "buteo.vector.rasterize", "kind": "module", "doc": "<h3 id=\"rasterize-vectors\">Rasterize vectors.</h3>\n\n<p>Functions to rasterize vectors to rasters.</p>\n\n<h6 id=\"todo\">TODO:</h6>\n\n<blockquote>\n  <ul>\n  <li>Add support for projections</li>\n  </ul>\n</blockquote>\n"}, {"fullname": "buteo.vector.rasterize.vector_rasterize", "modulename": "buteo.vector.rasterize", "qualname": "vector_rasterize", "kind": "function", "doc": "<p>Rasterize a vector to a raster.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource]\n    The vector to rasterize.</p>\n\n<p>pixel_size : Union[float, int]\n    The pixel size of the raster.</p>\n\n<p>out_path : Optional[str], optional\n    Path to output raster. Default: None</p>\n\n<p>extent: Optional[List[Union[float, int, str, gdal.Dataset, ogr.DataSource]]], optional\n    Extent of raster. Default: None</p>\n\n<p>projection : Optional[Union[str, int, osr.SpatialReference, gdal.Dataset, ogr.DataSource]], optional\n    Projection of raster. Default: None</p>\n\n<p>all_touch : bool, optional\n    All pixel touch? Default: False</p>\n\n<p>dtype : Union[str, np.dtype], optional\n    Data type of raster. Default: \"uint8\"</p>\n\n<p>optim : str, optional\n    Optimization for raster or vector? Default: \"raster\"</p>\n\n<p>band : int, optional\n    Band to rasterize. Default: 1</p>\n\n<p>fill_value : Union[int, float], optional\n    Fill value. Default: 0</p>\n\n<p>nodata_value : Optional[Union[int, float]], optional\n    Nodata value. Default: None</p>\n\n<p>check_memory : bool, optional\n    Check memory? Default: True</p>\n\n<p>burn_value : int, optional\n    Burn value (The value to burn into the raster). Default: 1</p>\n\n<p>attribute : Optional[str], optional\n    Attribute to rasterize. Default: None\n    This will burn the value of the attribute into the raster.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    Path to output raster.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">pixel_size</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">extent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">all_touch</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uint8&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">optim</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;raster&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">band</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">nodata_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">check_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">burn_value</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">attribute</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.reproject", "modulename": "buteo.vector.reproject", "kind": "module", "doc": "<h3 id=\"reproject-vectors\">Reproject vectors.</h3>\n\n<p>Functions to reproject vectors. References can be both vector and raster.</p>\n"}, {"fullname": "buteo.vector.reproject.vector_reproject", "modulename": "buteo.vector.reproject", "qualname": "vector_reproject", "kind": "function", "doc": "<p>Reprojects a vector given a target projection.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource]\n    The vector to reproject.</p>\n\n<p>projection : Union[str, int, osr.SpatialReference, gdal.Dataset, ogr.DataSource]\n    The projection is infered from the input. The input can be: WKT proj, EPSG proj, Proj, or read from a vector or raster datasource either from path or in-memory.</p>\n\n<p>out_path : Optional[str], optional\n    The destination to save to. If None then the output is an in-memory raster., default: None</p>\n\n<p>copy_if_same : bool, optional\n    Create a copy, even if the projections are the same., default: False</p>\n\n<p>prefix : str, optional\n    The prefix to add to the output path., default: \"\"</p>\n\n<p>suffix : str, optional\n    The suffix to add to the output path., default: \"\"</p>\n\n<p>add_uuid : bool, optional\n    Add a uuid to the output path., default: False</p>\n\n<p>overwrite : bool, optional\n    Is it possible to overwrite the out_path if it exists., default: True</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Union[str, List[str]]\n    An in-memory vector. If an out_path is given, the output is a string containing the path to the newly created vecotr.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">osr</span><span class=\"o\">.</span><span class=\"n\">SpatialReference</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">gdal</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">copy_if_same</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">add_uuid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.shapes", "modulename": "buteo.vector.shapes", "kind": "module", "doc": "<h3 id=\"shape-calculations\">Shape Calculations</h3>\n"}, {"fullname": "buteo.vector.shapes.vector_add_shapes_in_place", "modulename": "buteo.vector.shapes", "qualname": "vector_add_shapes_in_place", "kind": "function", "doc": "<p>Adds shape calculations to a vector such as area and perimeter.\nCan also add compactness measurements.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource, List[str, ogr.DataSource]]\n    Vector layer(s) or path(s) to vector layer(s).</p>\n\n<p>shapes : Optional[List[str]], optional\n    The shapes to calculate. The following a possible:\n        * Area          (In same unit as projection)\n        * Perimeter     (In same unit as projection)\n        * IPQ           (0-1) given as (4<em>Pi</em>Area)/(Perimeter ** 2)\n        * Hull Area     (The area of the convex hull. Same unit as projection)\n        * Compactness   (0-1) given as sqrt((area / hull_area) * ipq)\n        * Centroid      (Coordinate of X and Y)\n    Default: all shapes.</p>\n\n<p>prefix : str, optional\n    Prefix to add to the field names. Default: \"\".</p>\n\n<p>allow_lists : bool, optional\n    If True, will accept a list of vectors. If False, will raise an error if a list is passed. Default: True.</p>\n\n<p>verbose : bool, optional\n    If True, will print progress. Default: False.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out_path : str\n    Path to the output vector.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">shapes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">allow_lists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.split", "modulename": "buteo.vector.split", "kind": "module", "doc": "<h3 id=\"split-functions-for-vector-layers\">Split functions for vector layers.</h3>\n\n<p>Dissolve vectors by attributes or geometry.</p>\n"}, {"fullname": "buteo.vector.split.vector_split_by_fid", "modulename": "buteo.vector.split", "qualname": "vector_split_by_fid", "kind": "function", "doc": "<p>Split a vector by feature id.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource]\n    Input vector.</p>\n\n<p>out_folder : Optional[str], optional\n    Output folder, default: None.</p>\n\n<p>prefix : str, optional\n    Prefix for output files, default: \"\".</p>\n\n<p>suffix : str, optional\n    Suffix for output files, default: \"\".</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    Output paths.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_folder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_layer_idx</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.split.vector_split", "modulename": "buteo.vector.split", "qualname": "vector_split", "kind": "function", "doc": "<p>Split a vector by feature id.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>vector : Union[str, ogr.DataSource]\n    Input vector.</p>\n\n<p>out_folder : Optional[str], optional\n    Output folder, default: None.</p>\n\n<p>prefix : str, optional\n    Prefix for output files, default: \"\".</p>\n\n<p>suffix : str, optional\n    Suffix for output files, default: \"\".</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    Output paths.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">vector</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">osgeo</span><span class=\"o\">.</span><span class=\"n\">ogr</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">out_folder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_layer_idx</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "buteo.vector.zonal_statistics", "modulename": "buteo.vector.zonal_statistics", "kind": "module", "doc": "<p></p>\n"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();